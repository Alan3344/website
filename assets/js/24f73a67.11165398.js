"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[5927],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(n),f=l,h=d["".concat(i,".").concat(f)]||d[f]||p[f]||r;return n?a.createElement(h,o(o({ref:t},s),{},{components:n})):a.createElement(h,o({ref:t},s))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=f;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[d]="string"==typeof e?e:l,o[1]=c;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),l=n(6010),r="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return C}});var a=n(7462),l=n(7294),r=n(6010),o=n(2466),c=n(6550),i=n(1980),u=n(7392),s=n(12);function d(e){return function(e){var t,n;return null!=(t=null==(n=l.Children.map(e,(function(e){if(!e||(0,l.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,l.useMemo)((function(){var e=null!=t?t:d(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function f(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,r=(0,c.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,i._X)(o),(0,l.useCallback)((function(e){if(o){var t=new URLSearchParams(r.location.search);t.set(o,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[o,r])]}function b(e){var t,n,a,r,o=e.defaultValue,c=e.queryString,i=void 0!==c&&c,u=e.groupId,d=p(e),b=(0,l.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var l=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:o,tabValues:d})})),k=b[0],m=b[1],v=h({queryString:i,groupId:u}),g=v[0],y=v[1],x=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,s.Nk)(t),a=n[0],r=n[1],[a,(0,l.useCallback)((function(e){t&&r.set(e)}),[t,r])]),C=x[0],N=x[1],w=function(){var e=null!=g?g:C;return f({value:e,tabValues:d})?e:null}();return(0,l.useLayoutEffect)((function(){w&&m(w)}),[w]),{selectedValue:k,selectValue:(0,l.useCallback)((function(e){if(!f({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);m(e),y(e),N(e)}),[y,N,d]),tabValues:d}}var k=n(2389),m="tabList__CuJ",v="tabItem_LNqP";function g(e){var t=e.className,n=e.block,c=e.selectedValue,i=e.selectValue,u=e.tabValues,s=[],d=(0,o.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=s.indexOf(t),a=u[n].value;a!==c&&(d(t),i(a))},f=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var a,l=s.indexOf(e.currentTarget)+1;n=null!=(a=s[l])?a:s[0];break;case"ArrowLeft":var r,o=s.indexOf(e.currentTarget)-1;n=null!=(r=s[o])?r:s[s.length-1]}null==(t=n)||t.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,o=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:c===t?0:-1,"aria-selected":c===t,key:t,ref:function(e){return s.push(e)},onKeyDown:f,onClick:p},o,{className:(0,r.Z)("tabs__item",v,null==o?void 0:o.className,{"tabs__item--active":c===t})}),null!=n?n:t)})))}function y(e){var t=e.lazy,n=e.children,a=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=r.find((function(e){return e.props.value===a}));return o?(0,l.cloneElement)(o,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function x(e){var t=b(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",m)},l.createElement(g,(0,a.Z)({},e,t)),l.createElement(y,(0,a.Z)({},e,t)))}function C(e){var t=(0,k.Z)();return l.createElement(x,(0,a.Z)({key:String(t)},e))}},3401:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return f}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),o=n(4866),c=n(5162),i=["components"],u={title:"Checkbox",sidebar_label:"Checkbox",slug:"checkbox"},s=void 0,d={unversionedId:"controls/checkbox",id:"controls/checkbox",title:"Checkbox",description:"Checkbox allows to select one or more items from a group, or switch between two mutually exclusive options (checked or unchecked, on or off).",source:"@site/docs/controls/checkbox.md",sourceDirName:"controls",slug:"/controls/checkbox",permalink:"/website/docs/controls/checkbox",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/checkbox.md",tags:[],version:"current",frontMatter:{title:"Checkbox",sidebar_label:"Checkbox",slug:"checkbox"},sidebar:"docs",previous:{title:"Input and Selections",permalink:"/website/docs/controls/input-and-selections"},next:{title:"Dropdown",permalink:"/website/docs/controls/dropdown"}},p={},f=[{value:"Examples",id:"examples",level:2},{value:"Basic checkboxes",id:"basic-checkboxes",level:3},{value:"Checkbox with <code>on_change</code> event",id:"checkbox-with-on_change-event",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>autofocus</code>",id:"autofocus",level:3},{value:"<code>check_color</code>",id:"check_color",level:3},{value:"<code>fill_color</code>",id:"fill_color",level:3},{value:"<code>label</code>",id:"label",level:3},{value:"<code>label_position</code>",id:"label_position",level:3},{value:"<code>tristate</code>",id:"tristate",level:3},{value:"<code>value</code>",id:"value",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_blur</code>",id:"on_blur",level:3},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>on_focus</code>",id:"on_focus",level:3}],h={toc:f};function b(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Checkbox allows to select one or more items from a group, or switch between two mutually exclusive options (checked or unchecked, on or off)."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://flet-controls-gallery.fly.dev/input/checkbox"},"Live example")),(0,r.kt)("h3",{id:"basic-checkboxes"},"Basic checkboxes"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(c.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page):\n    def button_clicked(e):\n        t.value = (\n            f"Checkboxes values are:  {c1.value}, {c2.value}, {c3.value}, {c4.value}, {c5.value}."\n        )\n        page.update()\n\n    t = ft.Text()\n    c1 = ft.Checkbox(label="Unchecked by default checkbox", value=False)\n    c2 = ft.Checkbox(label="Undefined by default tristate checkbox", tristate=True)\n    c3 = ft.Checkbox(label="Checked by default checkbox", value=True)\n    c4 = ft.Checkbox(label="Disabled checkbox", disabled=True)\n    c5 = ft.Checkbox(\n        label="Checkbox with rendered label_position=\'left\'", label_position=ft.LabelPosition.LEFT\n    )\n    b = ft.ElevatedButton(text="Submit", on_click=button_clicked)\n    page.add(c1, c2, c3, c4, c5, b, t)\n\nft.app(target=main)\n')))),(0,r.kt)("img",{src:"/img/docs/controls/checkbox/basic-checkbox.gif",className:"screenshot-40"}),(0,r.kt)("h3",{id:"checkbox-with-on_change-event"},"Checkbox with ",(0,r.kt)("inlineCode",{parentName:"h3"},"on_change")," event"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(c.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page):\n  def checkbox_changed(e):\n    t.value = f"Checkbox value changed to {c.value}" \n    t.update()\n\n  c = ft.Checkbox(label="Checkbox with \'change\' event", on_change=checkbox_changed)\n  t = ft.Text()\n\n  page.add(c, t)\n\nft.app(target=main)\n')))),(0,r.kt)("img",{src:"/img/docs/controls/checkbox/checkbox-with-change-event.gif",className:"screenshot-40"}),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"autofocus"},(0,r.kt)("inlineCode",{parentName:"h3"},"autofocus")),(0,r.kt)("p",null,"True if the control will be selected as the initial focus. If there is more than one control on a page with autofocus set, then the first one added to the page will get focus."),(0,r.kt)("h3",{id:"check_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"check_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," to use for the check icon when this checkbox is checked."),(0,r.kt)("h3",{id:"fill_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"fill_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," that fills the checkbox, in all Material states:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HOVERED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FOCUSED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PRESSED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DRAGGED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SELECTED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SCROLLEDUNDER")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DISABLED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ERROR")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DEFAULT"),' - fallback state, meaning "all other states".')),(0,r.kt)("p",null,"To configure checkbox fill color for all Material states set ",(0,r.kt)("inlineCode",{parentName:"p"},"fill_color")," value to a literal, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"chk.fill_color=ft.colors.GREEN\n")),(0,r.kt)("p",null,"To configure fill color for specific Material states set its value to a dictionary where the key is state name. For example, to configure different fill colors for ",(0,r.kt)("inlineCode",{parentName:"p"},"HOVERED")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"FOCUSED")," states and another color for all other states:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"chk.fill_color={\n    ft.MaterialState.HOVERED: ft.colors.GREEN,\n    ft.MaterialState.FOCUSED: ft.colors.RED,  \n    ft.MaterialState.DEFAULT: ft.colors.BLACK,\n}\n")),(0,r.kt)("h3",{id:"label"},(0,r.kt)("inlineCode",{parentName:"h3"},"label")),(0,r.kt)("p",null,"The clickable label to display on the right of a checkbox."),(0,r.kt)("h3",{id:"label_position"},(0,r.kt)("inlineCode",{parentName:"h3"},"label_position")),(0,r.kt)("p",null,"Property value is ",(0,r.kt)("inlineCode",{parentName:"p"},"LabelPosition")," enum with ",(0,r.kt)("inlineCode",{parentName:"p"},"LabelPosition.RIGHT")," as default."),(0,r.kt)("h3",{id:"tristate"},(0,r.kt)("inlineCode",{parentName:"h3"},"tristate")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"True")," the checkbox's value can be ",(0,r.kt)("inlineCode",{parentName:"p"},"True"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"False"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"None")," (",(0,r.kt)("inlineCode",{parentName:"p"},"null"),")."),(0,r.kt)("p",null,"Checkbox displays a dash when its value is null."),(0,r.kt)("h3",{id:"value"},(0,r.kt)("inlineCode",{parentName:"h3"},"value")),(0,r.kt)("p",null,"Current value of the checkbox."),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"on_blur"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_blur")),(0,r.kt)("p",null,"Fires when the control has lost focus."),(0,r.kt)("h3",{id:"on_change"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_change")),(0,r.kt)("p",null,"Fires when the state of the Checkbox is changed."),(0,r.kt)("h3",{id:"on_focus"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_focus")),(0,r.kt)("p",null,"Fires when the control has received focus."))}b.isMDXComponent=!0}}]);