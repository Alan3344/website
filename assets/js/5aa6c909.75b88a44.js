"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[1686],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(n),m=o,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||a;return n?i.createElement(f,r(r({ref:t},u),{},{components:n})):i.createElement(f,r({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:o,r[1]=p;for(var s=2;s<a;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1914:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var i=n(7462),o=n(3366),a=(n(7294),n(3905)),r=["components"],p={title:"Customizing web app",sidebar_label:"Customizing web app"},l=void 0,s={unversionedId:"guides/python/deploying-web-app/customizing-web-app",id:"guides/python/deploying-web-app/customizing-web-app",title:"Customizing web app",description:'When you open Flet app in the browser its index.html, Flutter engine, favicon, images and other web app resources are served by Flet Server (aka "Flet daemon" or fletd). These resources are bundled with flet Python package. However, there are situations when you need to modify the contents of certain files to customize appearance of your app or its behavior, for example:',source:"@site/docs/guides/python/deploying-web-app/customizing-web-app.md",sourceDirName:"guides/python/deploying-web-app",slug:"/guides/python/deploying-web-app/customizing-web-app",permalink:"/website/docs/guides/python/deploying-web-app/customizing-web-app",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/guides/python/deploying-web-app/customizing-web-app.md",tags:[],version:"current",frontMatter:{title:"Customizing web app",sidebar_label:"Customizing web app"},sidebar:"docs",previous:{title:"Deploying web app",permalink:"/website/docs/guides/python/deploying-web-app"},next:{title:"Progressive web apps (PWA)",permalink:"/website/docs/guides/python/deploying-web-app/progressive-web-apps"}},u={},c=[{value:"Favicon",id:"favicon",level:4},{value:"Loading animation",id:"loading-animation",level:4}],d={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When you open Flet app in the browser its ",(0,a.kt)("inlineCode",{parentName:"p"},"index.html"),', Flutter engine, favicon, images and other web app resources are served by Flet Server (aka "Flet daemon" or ',(0,a.kt)("inlineCode",{parentName:"p"},"fletd"),"). These resources are bundled with ",(0,a.kt)("inlineCode",{parentName:"p"},"flet")," Python package. However, there are situations when you need to modify the contents of certain files to customize appearance of your app or its behavior, for example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Favicon."),(0,a.kt)("li",{parentName:"ul"},"App loading animation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"manifest.json")," with PWA details."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"index.html")," which includes app description and touch icon.")),(0,a.kt)("p",null,"You can specify ",(0,a.kt)("inlineCode",{parentName:"p"},"assets_dir")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"flet.app()")," call to set the location of assets that should be available to the application. ",(0,a.kt)("inlineCode",{parentName:"p"},"assets_dir")," could be a relative to your ",(0,a.kt)("inlineCode",{parentName:"p"},"main.py")," directory or an absolute path. For example, consider the following program structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/assets\n   /images/my-image.png\nmain.py\n")),(0,a.kt)("p",null,"You can access your images in the application as following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"{4,8}","{4,8}":!0},'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(ft.Image(src=f"/images/my-image.png"))\n\nft.app(\n    target=main,\n    assets_dir="assets"\n)\n')),(0,a.kt)("h4",{id:"favicon"},"Favicon"),(0,a.kt)("p",null,"To override favicon with your own put ",(0,a.kt)("inlineCode",{parentName:"p"},"favicon.png")," file into the root of assets directory. It should be a PNG image with the size of at least 32x32 pixels."),(0,a.kt)("h4",{id:"loading-animation"},"Loading animation"),(0,a.kt)("p",null,"To override Flet animation image put ",(0,a.kt)("inlineCode",{parentName:"p"},"icons/loading-animation.png")," image with your own app logo into the the root of assets directory."),(0,a.kt)("p",null,"If you like to completely customize Flutter app initialization logic you can modify ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/flet/blob/main/client/web/index.html"},"Flet's original ",(0,a.kt)("inlineCode",{parentName:"a"},"index.html"))," following the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/development/platform-integration/web/initialization"},"instructions in Flutter documentation"),". A customized ",(0,a.kt)("inlineCode",{parentName:"p"},"index.html")," must be placed in the root of assets directory."))}m.isMDXComponent=!0}}]);