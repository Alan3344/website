"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[3933],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,f=u["".concat(c,".").concat(b)]||u[b]||p[b]||o;return n?a.createElement(f,l(l({ref:t},d),{},{components:n})):a.createElement(f,l({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(7294),r=n(6010),o="tabItem_Ymn6";function l(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return T}});var a=n(7462),r=n(7294),o=n(6010),l=n(2466),i=n(6550),c=n(1980),s=n(7392),d=n(12);function u(e){return function(e){var t,n;return null!=(t=null==(n=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:u(n);return function(e){var t=(0,s.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function b(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,o=(0,i.k6)(),l=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,c._X)(l),(0,r.useCallback)((function(e){if(l){var t=new URLSearchParams(o.location.search);t.set(l,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[l,o])]}function h(e){var t,n,a,o,l=e.defaultValue,i=e.queryString,c=void 0!==i&&i,s=e.groupId,u=p(e),h=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!b({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:l,tabValues:u})})),v=h[0],m=h[1],k=f({queryString:c,groupId:s}),g=k[0],y=k[1],_=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),n=(0,d.Nk)(t),a=n[0],o=n[1],[a,(0,r.useCallback)((function(e){t&&o.set(e)}),[t,o])]),T=_[0],N=_[1],w=function(){var e=null!=g?g:T;return b({value:e,tabValues:u})?e:null}();return(0,r.useLayoutEffect)((function(){w&&m(w)}),[w]),{selectedValue:v,selectValue:(0,r.useCallback)((function(e){if(!b({value:e,tabValues:u}))throw new Error("Can't select invalid tab value="+e);m(e),y(e),N(e)}),[y,N,u]),tabValues:u}}var v=n(2389),m="tabList__CuJ",k="tabItem_LNqP";function g(e){var t=e.className,n=e.block,i=e.selectedValue,c=e.selectValue,s=e.tabValues,d=[],u=(0,l.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=d.indexOf(t),a=s[n].value;a!==i&&(u(t),c(a))},b=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var a,r=d.indexOf(e.currentTarget)+1;n=null!=(a=d[r])?a:d[0];break;case"ArrowLeft":var o,l=d.indexOf(e.currentTarget)-1;n=null!=(o=d[l])?o:d[d.length-1]}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((function(e){var t=e.value,n=e.label,l=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return d.push(e)},onKeyDown:b,onClick:p},l,{className:(0,o.Z)("tabs__item",k,null==l?void 0:l.className,{"tabs__item--active":i===t})}),null!=n?n:t)})))}function y(e){var t=e.lazy,n=e.children,a=e.selectedValue,o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var l=o.find((function(e){return e.props.value===a}));return l?(0,r.cloneElement)(l,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function _(e){var t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",m)},r.createElement(g,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function T(e){var t=(0,v.Z)();return r.createElement(_,(0,a.Z)({key:String(t)},e))}},9476:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return b}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=n(4866),i=n(5162),c=["components"],s={title:"Tabs",sidebar_label:"Tabs",slug:"tabs"},d=void 0,u={unversionedId:"controls/tabs",id:"controls/tabs",title:"Tabs",description:"The Tabs control is used for navigating frequently accessed, distinct content categories. Tabs allow for navigation between two or more content views and relies on text headers to articulate the different sections of content.",source:"@site/docs/controls/tabs.md",sourceDirName:"controls",slug:"/controls/tabs",permalink:"/docs/controls/tabs",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/tabs.md",tags:[],version:"current",frontMatter:{title:"Tabs",sidebar_label:"Tabs",slug:"tabs"},sidebar:"docs",previous:{title:"DataTable",permalink:"/docs/controls/datatable"},next:{title:"Card",permalink:"/docs/controls/card"}},p={},b=[{value:"Examples",id:"examples",level:2},{value:"Tabs",id:"tabs",level:3},{value:"<code>Tabs</code> properties",id:"tabs-properties",level:2},{value:"<code>animation_duration</code>",id:"animation_duration",level:3},{value:"<code>divider_color</code>",id:"divider_color",level:3},{value:"<code>indicator_border_radius</code>",id:"indicator_border_radius",level:3},{value:"<code>indicator_border_side</code>",id:"indicator_border_side",level:3},{value:"<code>indicator_color</code>",id:"indicator_color",level:3},{value:"<code>indicator_padding</code>",id:"indicator_padding",level:3},{value:"<code>indicator_tab_size</code>",id:"indicator_tab_size",level:3},{value:"<code>label_color</code>",id:"label_color",level:3},{value:"<code>overlay_color</code>",id:"overlay_color",level:3},{value:"<code>selected_index</code>",id:"selected_index",level:3},{value:"<code>scrollable</code>",id:"scrollable",level:3},{value:"<code>tabs</code>",id:"tabs-1",level:3},{value:"<code>unselected_label_color</code>",id:"unselected_label_color",level:3},{value:"<code>Tabs</code> events",id:"tabs-events",level:2},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>Tab</code> properties",id:"tab-properties",level:2},{value:"<code>content</code>",id:"content",level:3},{value:"<code>icon</code>",id:"icon",level:3},{value:"<code>tab_content</code>",id:"tab_content",level:3},{value:"<code>text</code>",id:"text",level:3}],f={toc:b};function h(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Tabs control is used for navigating frequently accessed, distinct content categories. Tabs allow for navigation between two or more content views and relies on text headers to articulate the different sections of content."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://flet-controls-gallery.fly.dev/layout/tabs"},"Live example")),(0,o.kt)("h3",{id:"tabs"},"Tabs"),(0,o.kt)("img",{src:"/img/docs/controls/tabs/tabs-simple.gif",className:"screenshot-60"}),(0,o.kt)(l.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n\n    t = ft.Tabs(\n        selected_index=1,\n        animation_duration=300,\n        tabs=[\n            ft.Tab(\n                text="Tab 1",\n                content=ft.Container(\n                    content=ft.Text("This is Tab 1"), alignment=ft.alignment.center\n                ),\n            ),\n            ft.Tab(\n                tab_content=ft.Icon(ft.icons.SEARCH),\n                content=ft.Text("This is Tab 2"),\n            ),\n            ft.Tab(\n                text="Tab 3",\n                icon=ft.icons.SETTINGS,\n                content=ft.Text("This is Tab 3"),\n            ),\n        ],\n        expand=1,\n    )\n\n    page.add(t)\n\nft.app(target=main)\n')))),(0,o.kt)("h2",{id:"tabs-properties"},(0,o.kt)("inlineCode",{parentName:"h2"},"Tabs")," properties"),(0,o.kt)("h3",{id:"animation_duration"},(0,o.kt)("inlineCode",{parentName:"h3"},"animation_duration")),(0,o.kt)("p",null,"Duration of animation in milliseconds of swtiching between tabs. Default is ",(0,o.kt)("inlineCode",{parentName:"p"},"50"),"."),(0,o.kt)("h3",{id:"divider_color"},(0,o.kt)("inlineCode",{parentName:"h3"},"divider_color")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of the divider."),(0,o.kt)("h3",{id:"indicator_border_radius"},(0,o.kt)("inlineCode",{parentName:"h3"},"indicator_border_radius")),(0,o.kt)("p",null,"The radius of the indicator's corners."),(0,o.kt)("h3",{id:"indicator_border_side"},(0,o.kt)("inlineCode",{parentName:"h3"},"indicator_border_side")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," and weight of the horizontal line drawn below the selected tab."),(0,o.kt)("h3",{id:"indicator_color"},(0,o.kt)("inlineCode",{parentName:"h3"},"indicator_color")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of the line that appears below the selected tab."),(0,o.kt)("h3",{id:"indicator_padding"},(0,o.kt)("inlineCode",{parentName:"h3"},"indicator_padding")),(0,o.kt)("p",null,"Locates the selected tab's underline relative to the tab's boundary. The ",(0,o.kt)("inlineCode",{parentName:"p"},"indicator_tab_size")," property can be used to define the tab indicator's bounds in terms of its (centered) tab widget with ",(0,o.kt)("inlineCode",{parentName:"p"},"False"),", or the entire tab with ",(0,o.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,o.kt)("h3",{id:"indicator_tab_size"},(0,o.kt)("inlineCode",{parentName:"h3"},"indicator_tab_size")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"True")," for indicator to take entire tab."),(0,o.kt)("h3",{id:"label_color"},(0,o.kt)("inlineCode",{parentName:"h3"},"label_color")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of selected tab labels."),(0,o.kt)("h3",{id:"overlay_color"},(0,o.kt)("inlineCode",{parentName:"h3"},"overlay_color")),(0,o.kt)("p",null,"Defines the ink response focus, hover, and splash ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"colors"),". If specified, it is resolved against one of ",(0,o.kt)("inlineCode",{parentName:"p"},"MaterialState.FOCUSED"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"MaterialState.HOVERED"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"MaterialState.PRESSED"),"."),(0,o.kt)("h3",{id:"selected_index"},(0,o.kt)("inlineCode",{parentName:"h3"},"selected_index")),(0,o.kt)("p",null,"The index of currently selected tab."),(0,o.kt)("h3",{id:"scrollable"},(0,o.kt)("inlineCode",{parentName:"h3"},"scrollable")),(0,o.kt)("p",null,"Whether this tab bar can be scrolled horizontally."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"scrollable")," is ",(0,o.kt)("inlineCode",{parentName:"p"},"True"),", then each tab is as wide as needed for its label and the entire Tabs controls is scrollable. Otherwise each tab gets an equal share of the available space."),(0,o.kt)("h3",{id:"tabs-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"tabs")),(0,o.kt)("p",null,"A list of ",(0,o.kt)("inlineCode",{parentName:"p"},"Tab")," controls."),(0,o.kt)("h3",{id:"unselected_label_color"},(0,o.kt)("inlineCode",{parentName:"h3"},"unselected_label_color")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of unselected tab labels."),(0,o.kt)("h2",{id:"tabs-events"},(0,o.kt)("inlineCode",{parentName:"h2"},"Tabs")," events"),(0,o.kt)("h3",{id:"on_change"},(0,o.kt)("inlineCode",{parentName:"h3"},"on_change")),(0,o.kt)("p",null,"Fires when ",(0,o.kt)("inlineCode",{parentName:"p"},"selected_index")," changes."),(0,o.kt)("h2",{id:"tab-properties"},(0,o.kt)("inlineCode",{parentName:"h2"},"Tab")," properties"),(0,o.kt)("h3",{id:"content"},(0,o.kt)("inlineCode",{parentName:"h3"},"content")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Control")," to display below the Tab when it is selected."),(0,o.kt)("h3",{id:"icon"},(0,o.kt)("inlineCode",{parentName:"h3"},"icon")),(0,o.kt)("p",null,"An icon to display on the left of Tab text."),(0,o.kt)("h3",{id:"tab_content"},(0,o.kt)("inlineCode",{parentName:"h3"},"tab_content")),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"Control")," representing custom tab content replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"text")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"icon"),"."),(0,o.kt)("h3",{id:"text"},(0,o.kt)("inlineCode",{parentName:"h3"},"text")),(0,o.kt)("p",null,"Tab's display name."))}h.isMDXComponent=!0}}]);