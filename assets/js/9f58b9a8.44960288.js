"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[3706],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var l=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=l.createContext({}),u=function(e){var t=l.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return l.createElement(d.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},h=l.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),p=u(n),h=i,f=p["".concat(d,".").concat(h)]||p[h]||c[h]||a;return n?l.createElement(f,o(o({ref:t},s),{},{components:n})):l.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r[p]="string"==typeof e?e:i,o[1]=r;for(var u=2;u<a;u++)o[u]=n[u];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var l=n(7294),i=n(6010),a="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return l.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,o),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return N}});var l=n(7462),i=n(7294),a=n(6010),o=n(2466),r=n(6550),d=n(1980),u=n(7392),s=n(12);function p(e){return function(e){var t,n;return null!=(t=null==(n=i.Children.map(e,(function(e){if(!e||(0,i.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function c(e){var t=e.values,n=e.children;return(0,i.useMemo)((function(){var e=null!=t?t:p(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function h(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,l=e.groupId,a=(0,r.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,l=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=l?l:null}({queryString:n,groupId:l});return[(0,d._X)(o),(0,i.useCallback)((function(e){if(o){var t=new URLSearchParams(a.location.search);t.set(o,e),a.replace(Object.assign({},a.location,{search:t.toString()}))}}),[o,a])]}function m(e){var t,n,l,a,o=e.defaultValue,r=e.queryString,d=void 0!==r&&r,u=e.groupId,p=c(e),m=(0,i.useState)((function(){return function(e){var t,n=e.defaultValue,l=e.tabValues;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+l.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var i=null!=(t=l.find((function(e){return e.default})))?t:l[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:o,tabValues:p})})),k=m[0],v=m[1],b=f({queryString:d,groupId:u}),x=b[0],_=b[1],g=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,s.Nk)(t),l=n[0],a=n[1],[l,(0,i.useCallback)((function(e){t&&a.set(e)}),[t,a])]),N=g[0],y=g[1],T=function(){var e=null!=x?x:N;return h({value:e,tabValues:p})?e:null}();return(0,i.useLayoutEffect)((function(){T&&v(T)}),[T]),{selectedValue:k,selectValue:(0,i.useCallback)((function(e){if(!h({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);v(e),_(e),y(e)}),[_,y,p]),tabValues:p}}var k=n(2389),v="tabList__CuJ",b="tabItem_LNqP";function x(e){var t=e.className,n=e.block,r=e.selectedValue,d=e.selectValue,u=e.tabValues,s=[],p=(0,o.o5)().blockElementScrollPositionUntilNextRender,c=function(e){var t=e.currentTarget,n=s.indexOf(t),l=u[n].value;l!==r&&(p(t),d(l))},h=function(e){var t,n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":var l,i=s.indexOf(e.currentTarget)+1;n=null!=(l=s[i])?l:s[0];break;case"ArrowLeft":var a,o=s.indexOf(e.currentTarget)-1;n=null!=(a=s[o])?a:s[s.length-1]}null==(t=n)||t.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,o=e.attributes;return i.createElement("li",(0,l.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:function(e){return s.push(e)},onKeyDown:h,onClick:c},o,{className:(0,a.Z)("tabs__item",b,null==o?void 0:o.className,{"tabs__item--active":r===t})}),null!=n?n:t)})))}function _(e){var t=e.lazy,n=e.children,l=e.selectedValue,a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=a.find((function(e){return e.props.value===l}));return o?(0,i.cloneElement)(o,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==l})})))}function g(e){var t=m(e);return i.createElement("div",{className:(0,a.Z)("tabs-container",v)},i.createElement(x,(0,l.Z)({},e,t)),i.createElement(_,(0,l.Z)({},e,t)))}function N(e){var t=(0,k.Z)();return i.createElement(g,(0,l.Z)({key:String(t)},e))}},6586:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return h}});var l=n(7462),i=n(3366),a=(n(7294),n(3905)),o=n(4866),r=n(5162),d=["components"],u={title:"TextField",sidebar_label:"TextField",slug:"textfield"},s=void 0,p={unversionedId:"controls/textfield",id:"controls/textfield",title:"TextField",description:"A material design text field.",source:"@site/docs/controls/textfield.md",sourceDirName:"controls",slug:"/controls/textfield",permalink:"/website/docs/controls/textfield",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/textfield.md",tags:[],version:"current",frontMatter:{title:"TextField",sidebar_label:"TextField",slug:"textfield"},sidebar:"docs",previous:{title:"Switch",permalink:"/website/docs/controls/switch"},next:{title:"Dialogs, Alerts and Panels",permalink:"/website/docs/controls/dialogs-alerts-panels"}},c={},h=[{value:"Examples",id:"examples",level:2},{value:"Basic TextFields",id:"basic-textfields",level:3},{value:"TextField with <code>on_change</code> event",id:"textfield-with-on_change-event",level:3},{value:"Password with reveal button",id:"password-with-reveal-button",level:3},{value:"Multiline TextFields",id:"multiline-textfields",level:3},{value:"Underlined and borderless TextFields",id:"underlined-and-borderless-textfields",level:3},{value:"TextFields with prefixes and suffixes",id:"textfields-with-prefixes-and-suffixes",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>autocorrect</code>",id:"autocorrect",level:3},{value:"<code>autofocus</code>",id:"autofocus",level:3},{value:"<code>bgcolor</code>",id:"bgcolor",level:3},{value:"<code>border</code>",id:"border",level:3},{value:"<code>border_color</code>",id:"border_color",level:3},{value:"<code>border_radius</code>",id:"border_radius",level:3},{value:"<code>border_width</code>",id:"border_width",level:3},{value:"<code>can_reveal_password</code>",id:"can_reveal_password",level:3},{value:"<code>capitalization</code>",id:"capitalization",level:3},{value:"<code>color</code>",id:"color",level:3},{value:"<code>content_padding</code>",id:"content_padding",level:3},{value:"<code>counter_style</code>",id:"counter_style",level:3},{value:"<code>counter_text</code>",id:"counter_text",level:3},{value:"<code>cursor_color</code>",id:"cursor_color",level:3},{value:"<code>cursor_height</code>",id:"cursor_height",level:3},{value:"<code>cursor_radius</code>",id:"cursor_radius",level:3},{value:"<code>cursor_width</code>",id:"cursor_width",level:3},{value:"<code>dense</code>",id:"dense",level:3},{value:"<code>enable_suggestions</code>",id:"enable_suggestions",level:3},{value:"<code>error_style</code>",id:"error_style",level:3},{value:"<code>error_text</code>",id:"error_text",level:3},{value:"<code>filled</code>",id:"filled",level:3},{value:"<code>focused_bgcolor</code>",id:"focused_bgcolor",level:3},{value:"<code>focused_border_color</code>",id:"focused_border_color",level:3},{value:"<code>focused_border_width</code>",id:"focused_border_width",level:3},{value:"<code>focused_color</code>",id:"focused_color",level:3},{value:"<code>helper_style</code>",id:"helper_style",level:3},{value:"<code>helper_text</code>",id:"helper_text",level:3},{value:"<code>hint_style</code>",id:"hint_style",level:3},{value:"<code>hint_text</code>",id:"hint_text",level:3},{value:"<code>icon</code>",id:"icon",level:3},{value:"<code>keyboard_type</code>",id:"keyboard_type",level:3},{value:"<code>label</code>",id:"label",level:3},{value:"<code>label_style</code>",id:"label_style",level:3},{value:"<code>max_length</code>",id:"max_length",level:3},{value:"<code>max_lines</code>",id:"max_lines",level:3},{value:"<code>min_lines</code>",id:"min_lines",level:3},{value:"<code>multiline</code>",id:"multiline",level:3},{value:"<code>password</code>",id:"password",level:3},{value:"<code>prefix</code>",id:"prefix",level:3},{value:"<code>prefix_icon</code>",id:"prefix_icon",level:3},{value:"<code>prefix_style</code>",id:"prefix_style",level:3},{value:"<code>prefix_text</code>",id:"prefix_text",level:3},{value:"<code>read_only</code>",id:"read_only",level:3},{value:"<code>selection_color</code>",id:"selection_color",level:3},{value:"<code>shift_enter</code>",id:"shift_enter",level:3},{value:"<code>smart_dashes_type</code>",id:"smart_dashes_type",level:3},{value:"<code>smart_quotes_type</code>",id:"smart_quotes_type",level:3},{value:"<code>suffix</code>",id:"suffix",level:3},{value:"<code>suffix_icon</code>",id:"suffix_icon",level:3},{value:"<code>suffix_style</code>",id:"suffix_style",level:3},{value:"<code>suffix_text</code>",id:"suffix_text",level:3},{value:"<code>text_align</code>",id:"text_align",level:3},{value:"<code>text_size</code>",id:"text_size",level:3},{value:"<code>text_style</code>",id:"text_style",level:3},{value:"<code>value</code>",id:"value",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>focus()</code>",id:"focus",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_blur</code>",id:"on_blur",level:3},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>on_focus</code>",id:"on_focus",level:3},{value:"<code>on_submit</code>",id:"on_submit",level:3}],f={toc:h};function m(e){var t=e.components,n=(0,i.Z)(e,d);return(0,a.kt)("wrapper",(0,l.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A material design text field."),(0,a.kt)("p",null,"A text field lets the user enter text, either with hardware keyboard or with an onscreen keyboard."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://flet-controls-gallery.fly.dev/input/textfield"},"Live example")),(0,a.kt)("h3",{id:"basic-textfields"},"Basic TextFields"),(0,a.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    def button_clicked(e):\n        t.value = f"Textboxes values are:  \'{tb1.value}\', \'{tb2.value}\', \'{tb3.value}\', \'{tb4.value}\', \'{tb5.value}\'."\n        page.update()\n\n    t = ft.Text()\n    tb1 = ft.TextField(label="Standard")\n    tb2 = ft.TextField(label="Disabled", disabled=True, value="First name")\n    tb3 = ft.TextField(label="Read-only", read_only=True, value="Last name")\n    tb4 = ft.TextField(label="With placeholder", hint_text="Please enter text here")\n    tb5 = ft.TextField(label="With an icon", icon=ft.icons.EMOJI_EMOTIONS)\n    b = ft.ElevatedButton(text="Submit", on_click=button_clicked)\n    page.add(tb1, tb2, tb3, tb4, tb5, b, t)\n\nft.app(target=main)\n')))),(0,a.kt)("img",{src:"/img/docs/controls/textfield/basic-textfield.gif",className:"screenshot-40"}),(0,a.kt)("h3",{id:"textfield-with-on_change-event"},"TextField with ",(0,a.kt)("inlineCode",{parentName:"h3"},"on_change")," event"),(0,a.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import flet as ft\n\ndef main(page: ft.Page):\n    def textbox_changed(e):\n        t.value = e.control.value\n        page.update()\n\n    t = ft.Text()\n    tb = ft.TextField(\n        label=\"Textbox with 'change' event:\",\n        on_change=textbox_changed,\n    )\n\n    page.add(tb, t)\n\nft.app(target=main)\n")))),(0,a.kt)("img",{src:"/img/docs/controls/textfield/textfield-with-change-event.gif",className:"screenshot-40"}),(0,a.kt)("h3",{id:"password-with-reveal-button"},"Password with reveal button"),(0,a.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.TextField(\n            label="Password with reveal button", password=True, can_reveal_password=True\n        )\n    )\n\nft.app(target=main)\n')))),(0,a.kt)("img",{src:"/img/docs/controls/textfield/textfield-with-password.gif",className:"screenshot-40"}),(0,a.kt)("h3",{id:"multiline-textfields"},"Multiline TextFields"),(0,a.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.TextField(label="standard", multiline=True),\n        ft.TextField(\n            label="disabled",\n            multiline=True,\n            disabled=True,\n            value="line1\\nline2\\nline3\\nline4\\nline5",\n        ),\n        ft.TextField(\n            label="Auto adjusted height with max lines",\n            multiline=True,\n            min_lines=1,\n            max_lines=3,\n        ),\n    )\n\nft.app(target=main)\n')))),(0,a.kt)("img",{src:"/img/docs/controls/textfield/textfield-with-multiline.gif",className:"screenshot-40"}),(0,a.kt)("h3",{id:"underlined-and-borderless-textfields"},"Underlined and borderless TextFields"),(0,a.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.TextField(label="Underlined", border="underline", hint_text="Enter text here"),\n        ft.TextField(\n            label="Underlined filled",\n            border=ft.InputBorder.UNDERLINE,\n            filled=True,\n            hint_text="Enter text here",\n        ),\n        ft.TextField(label="Borderless", border="none", hint_text="Enter text here"),\n        ft.TextField(\n            label="Borderless filled",\n            border=ft.InputBorder.NONE,\n            filled=True,\n            hint_text="Enter text here",\n        ),\n    )\n\nft.app(target=main)\n')))),(0,a.kt)("img",{src:"/img/docs/controls/textfield/textfield-with-underline-and-borderless.gif",className:"screenshot-40"}),(0,a.kt)("h3",{id:"textfields-with-prefixes-and-suffixes"},"TextFields with prefixes and suffixes"),(0,a.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.TextField(label="With prefix", prefix_text="https://"),\n        ft.TextField(label="With suffix", suffix_text=".com"),\n        ft.TextField(\n            label="With prefix and suffix", prefix_text="https://", suffix_text=".com"\n        ),\n        ft.TextField(\n            label="My favorite color",\n            icon=ft.icons.FORMAT_SIZE,\n            hint_text="Type your favorite color",\n            helper_text="You can type only one color",\n            counter_text="0 symbols typed",\n            prefix_icon=ft.icons.COLOR_LENS,\n            suffix_text="...is your color",\n        ),\n    )\n\nft.app(target=main)\n')))),(0,a.kt)("img",{src:"/img/docs/controls/textfield/textfield-with-prefix-and-suffix.gif",className:"screenshot-40"}),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"autocorrect"},(0,a.kt)("inlineCode",{parentName:"h3"},"autocorrect")),(0,a.kt)("p",null,"Whether to enable autocorrection. Default is ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,a.kt)("h3",{id:"autofocus"},(0,a.kt)("inlineCode",{parentName:"h3"},"autofocus")),(0,a.kt)("p",null,"True if the control will be selected as the initial focus. If there is more than one control on a page with autofocus set, then the first one added to the page will get focus."),(0,a.kt)("h3",{id:"bgcolor"},(0,a.kt)("inlineCode",{parentName:"h3"},"bgcolor")),(0,a.kt)("p",null,"TextField background ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color"),"."),(0,a.kt)("h3",{id:"border"},(0,a.kt)("inlineCode",{parentName:"h3"},"border")),(0,a.kt)("p",null,"Border around input - ",(0,a.kt)("inlineCode",{parentName:"p"},"InputBorder")," enum with one of the values: ",(0,a.kt)("inlineCode",{parentName:"p"},"OUTLINE")," (default), ",(0,a.kt)("inlineCode",{parentName:"p"},"UNDERLINE"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"NONE"),"."),(0,a.kt)("h3",{id:"border_color"},(0,a.kt)("inlineCode",{parentName:"h3"},"border_color")),(0,a.kt)("p",null,"Border ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color"),". Could be ",(0,a.kt)("inlineCode",{parentName:"p"},"transparent")," to hide the border."),(0,a.kt)("h3",{id:"border_radius"},(0,a.kt)("inlineCode",{parentName:"h3"},"border_radius")),(0,a.kt)("p",null,"See ","[",(0,a.kt)("inlineCode",{parentName:"p"},"Container.border_radius"),"]"," property docs for more information about border radius."),(0,a.kt)("h3",{id:"border_width"},(0,a.kt)("inlineCode",{parentName:"h3"},"border_width")),(0,a.kt)("p",null,"The width of the border in virtual pixels. Default is 1. Set to 0 to completely remove border."),(0,a.kt)("h3",{id:"can_reveal_password"},(0,a.kt)("inlineCode",{parentName:"h3"},"can_reveal_password")),(0,a.kt)("p",null,"Displays a toggle icon button that allows revealing the entered password."),(0,a.kt)("h3",{id:"capitalization"},(0,a.kt)("inlineCode",{parentName:"h3"},"capitalization")),(0,a.kt)("p",null,"Enables automatic on-the-fly capitalization of entered text."),(0,a.kt)("p",null,"Property value is ",(0,a.kt)("inlineCode",{parentName:"p"},"TextCapitalization")," enum with the following values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NONE")," (default) - do not change entered text."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CHARACTERS")," - every entered symbol is capitalized."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WORDS")," - capitalize the first letter of every word."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"SENTENCES")," - capitalize the first letter of every sentence.")),(0,a.kt)("h3",{id:"color"},(0,a.kt)("inlineCode",{parentName:"h3"},"color")),(0,a.kt)("p",null,"Text ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color"),"."),(0,a.kt)("h3",{id:"content_padding"},(0,a.kt)("inlineCode",{parentName:"h3"},"content_padding")),(0,a.kt)("p",null,"The padding for the input decoration's container."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"container#padding"},(0,a.kt)("inlineCode",{parentName:"a"},"Container.padding"))," for more information about padding and possible values."),(0,a.kt)("h3",{id:"counter_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"counter_style")),(0,a.kt)("p",null,"The style to use for ",(0,a.kt)("inlineCode",{parentName:"p"},"counter_text"),"."),(0,a.kt)("h3",{id:"counter_text"},(0,a.kt)("inlineCode",{parentName:"h3"},"counter_text")),(0,a.kt)("p",null,"Optional text to place below the line as a character count."),(0,a.kt)("p",null,"If null or an empty string and counter isn't specified, then nothing will appear in the counter's location."),(0,a.kt)("h3",{id:"cursor_color"},(0,a.kt)("inlineCode",{parentName:"h3"},"cursor_color")),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of TextField cursor."),(0,a.kt)("h3",{id:"cursor_height"},(0,a.kt)("inlineCode",{parentName:"h3"},"cursor_height")),(0,a.kt)("p",null,"Sets cursor height."),(0,a.kt)("h3",{id:"cursor_radius"},(0,a.kt)("inlineCode",{parentName:"h3"},"cursor_radius")),(0,a.kt)("p",null,"Sets cursor radius."),(0,a.kt)("h3",{id:"cursor_width"},(0,a.kt)("inlineCode",{parentName:"h3"},"cursor_width")),(0,a.kt)("p",null,"Sets cursor width."),(0,a.kt)("h3",{id:"dense"},(0,a.kt)("inlineCode",{parentName:"h3"},"dense")),(0,a.kt)("p",null,"Whether the TextField is part of a dense form (ie, uses less vertical space)."),(0,a.kt)("h3",{id:"enable_suggestions"},(0,a.kt)("inlineCode",{parentName:"h3"},"enable_suggestions")),(0,a.kt)("p",null,"Whether to show input suggestions as the user types."),(0,a.kt)("p",null,"This flag only affects Android. On iOS, suggestions are tied directly to ",(0,a.kt)("inlineCode",{parentName:"p"},"autocorrect"),", so that suggestions are only shown when ",(0,a.kt)("inlineCode",{parentName:"p"},"autocorrect")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),". On Android autocorrection and suggestion are controlled separately. Default is ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,a.kt)("h3",{id:"error_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"error_style")),(0,a.kt)("p",null,"The style to use for ",(0,a.kt)("inlineCode",{parentName:"p"},"error_text"),"."),(0,a.kt)("h3",{id:"error_text"},(0,a.kt)("inlineCode",{parentName:"h3"},"error_text")),(0,a.kt)("p",null,"Text that appears below the input border."),(0,a.kt)("p",null,"If non-null, the border's color animates to red and the ",(0,a.kt)("inlineCode",{parentName:"p"},"helper_text")," is not shown."),(0,a.kt)("h3",{id:"filled"},(0,a.kt)("inlineCode",{parentName:"h3"},"filled")),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"True")," the decoration's container is filled with theme fillColor."),(0,a.kt)("h3",{id:"focused_bgcolor"},(0,a.kt)("inlineCode",{parentName:"h3"},"focused_bgcolor")),(0,a.kt)("p",null,"Background ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of TextField in focused state."),(0,a.kt)("h3",{id:"focused_border_color"},(0,a.kt)("inlineCode",{parentName:"h3"},"focused_border_color")),(0,a.kt)("p",null,"Border ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," in focused state."),(0,a.kt)("h3",{id:"focused_border_width"},(0,a.kt)("inlineCode",{parentName:"h3"},"focused_border_width")),(0,a.kt)("p",null,"Border width in focused state."),(0,a.kt)("h3",{id:"focused_color"},(0,a.kt)("inlineCode",{parentName:"h3"},"focused_color")),(0,a.kt)("p",null,"Text ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," when TextField is focused."),(0,a.kt)("h3",{id:"helper_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"helper_style")),(0,a.kt)("p",null,"The style to use for ",(0,a.kt)("inlineCode",{parentName:"p"},"helper_text"),"."),(0,a.kt)("h3",{id:"helper_text"},(0,a.kt)("inlineCode",{parentName:"h3"},"helper_text")),(0,a.kt)("p",null,"Text that provides context about the input's value, such as how the value will be used."),(0,a.kt)("p",null,"If non-null, the text is displayed below the input decorator, in the same location as ",(0,a.kt)("inlineCode",{parentName:"p"},"error_text"),". If a non-null ",(0,a.kt)("inlineCode",{parentName:"p"},"error_text")," value is specified then the helper text is not shown."),(0,a.kt)("h3",{id:"hint_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"hint_style")),(0,a.kt)("p",null,"The style to use for ",(0,a.kt)("inlineCode",{parentName:"p"},"hint_text"),"."),(0,a.kt)("h3",{id:"hint_text"},(0,a.kt)("inlineCode",{parentName:"h3"},"hint_text")),(0,a.kt)("p",null,"Text that suggests what sort of input the field accepts."),(0,a.kt)("p",null,"Displayed on top of the input when the it's empty and either (a) ",(0,a.kt)("inlineCode",{parentName:"p"},"label")," is null or (b) the input has the focus."),(0,a.kt)("h3",{id:"icon"},(0,a.kt)("inlineCode",{parentName:"h3"},"icon")),(0,a.kt)("p",null,"The name of the icon to show before the input field and outside of the decoration's container."),(0,a.kt)("h3",{id:"keyboard_type"},(0,a.kt)("inlineCode",{parentName:"h3"},"keyboard_type")),(0,a.kt)("p",null,"The type of keyboard to use for editing the text. The property value is ",(0,a.kt)("inlineCode",{parentName:"p"},"KeyboardType")," enum with the following values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TEXT")," (default)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MULTILINE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NUMBER")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"PHONE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"DATETIME")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"EMAIL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"URL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VISIBLE_PASSWORD")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NAME")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"STREET_ADDRESS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NONE"))),(0,a.kt)("h3",{id:"label"},(0,a.kt)("inlineCode",{parentName:"h3"},"label")),(0,a.kt)("p",null,"Optional text that describes the input field."),(0,a.kt)("p",null,"When the input field is empty and unfocused, the label is displayed on top of the input field (i.e., at the same location on the screen where text may be entered in the input field). When the input field receives focus (or if the field is non-empty) the label moves above, either vertically adjacent to, or to the center of the input field."),(0,a.kt)("h3",{id:"label_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"label_style")),(0,a.kt)("p",null,"The style to use for ",(0,a.kt)("inlineCode",{parentName:"p"},"label"),"."),(0,a.kt)("h3",{id:"max_length"},(0,a.kt)("inlineCode",{parentName:"h3"},"max_length")),(0,a.kt)("p",null,"Limits a maximum number of characters that can be entered into TextField."),(0,a.kt)("h3",{id:"max_lines"},(0,a.kt)("inlineCode",{parentName:"h3"},"max_lines")),(0,a.kt)("p",null,"The maximum number of lines to show at one time, wrapping if necessary."),(0,a.kt)("p",null,"This affects the height of the field itself and does not limit the number of lines that can be entered into the field."),(0,a.kt)("p",null,"If this is ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," (the default), the text will not wrap, but will scroll horizontally instead."),(0,a.kt)("h3",{id:"min_lines"},(0,a.kt)("inlineCode",{parentName:"h3"},"min_lines")),(0,a.kt)("p",null,"The minimum number of lines to occupy when the content spans fewer lines."),(0,a.kt)("p",null,"This affects the height of the field itself and does not limit the number of lines that can be entered into the field."),(0,a.kt)("p",null,"Default is ",(0,a.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,a.kt)("h3",{id:"multiline"},(0,a.kt)("inlineCode",{parentName:"h3"},"multiline")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"True")," if TextField can contain multiple lines of text."),(0,a.kt)("h3",{id:"password"},(0,a.kt)("inlineCode",{parentName:"h3"},"password")),(0,a.kt)("p",null,"Whether to hide the text being edited. Default is ",(0,a.kt)("inlineCode",{parentName:"p"},"False"),"."),(0,a.kt)("h3",{id:"prefix"},(0,a.kt)("inlineCode",{parentName:"h3"},"prefix")),(0,a.kt)("p",null,"Optional ",(0,a.kt)("inlineCode",{parentName:"p"},"Control")," to place on the line before the input."),(0,a.kt)("p",null,"This can be used, for example, to add some padding to text that would otherwise be specified using ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix_text"),", or to add a custom control in front of the input. The control's baseline is lined up with the input baseline."),(0,a.kt)("p",null,"Only one of ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix_text")," can be specified."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix")," appears after the ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix_icon"),", if both are specified."),(0,a.kt)("h3",{id:"prefix_icon"},(0,a.kt)("inlineCode",{parentName:"h3"},"prefix_icon")),(0,a.kt)("p",null,"An icon that appears before the ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix_text")," and before the editable part of the text field, within the decoration's container."),(0,a.kt)("h3",{id:"prefix_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"prefix_style")),(0,a.kt)("p",null,"The style to use for ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix_text"),"."),(0,a.kt)("h3",{id:"prefix_text"},(0,a.kt)("inlineCode",{parentName:"h3"},"prefix_text")),(0,a.kt)("p",null,"Optional text ",(0,a.kt)("inlineCode",{parentName:"p"},"prefix")," to place on the line before the input."),(0,a.kt)("h3",{id:"read_only"},(0,a.kt)("inlineCode",{parentName:"h3"},"read_only")),(0,a.kt)("p",null,"Whether the text can be changed."),(0,a.kt)("p",null,"When this is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),", the text cannot be modified by any shortcut or keyboard operation. The text is still selectable."),(0,a.kt)("p",null,"Defaults to ",(0,a.kt)("inlineCode",{parentName:"p"},"False"),"."),(0,a.kt)("h3",{id:"selection_color"},(0,a.kt)("inlineCode",{parentName:"h3"},"selection_color")),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of TextField selection."),(0,a.kt)("h3",{id:"shift_enter"},(0,a.kt)("inlineCode",{parentName:"h3"},"shift_enter")),(0,a.kt)("p",null,"Changes the behavior of ",(0,a.kt)("inlineCode",{parentName:"p"},"Enter")," button in ",(0,a.kt)("inlineCode",{parentName:"p"},"multiline")," TextField to be chat-like, i.e. new line can be added with ",(0,a.kt)("inlineCode",{parentName:"p"},"Shift"),"+",(0,a.kt)("inlineCode",{parentName:"p"},"Enter")," and pressing just ",(0,a.kt)("inlineCode",{parentName:"p"},"Enter")," fires ",(0,a.kt)("inlineCode",{parentName:"p"},"on_submit")," event."),(0,a.kt)("h3",{id:"smart_dashes_type"},(0,a.kt)("inlineCode",{parentName:"h3"},"smart_dashes_type")),(0,a.kt)("p",null,"Whether to allow the platform to automatically format dashes."),(0,a.kt)("p",null,"This flag only affects iOS versions 11 and above. As an example of what this does, two consecutive hyphen characters will be automatically replaced with one en dash, and three consecutive hyphens will become one em dash. Default is ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,a.kt)("h3",{id:"smart_quotes_type"},(0,a.kt)("inlineCode",{parentName:"h3"},"smart_quotes_type")),(0,a.kt)("p",null,"Whether to allow the platform to automatically format quotes."),(0,a.kt)("p",null,"This flag only affects iOS. As an example of what this does, a standard vertical double quote character will be automatically replaced by a left or right double quote depending on its position in a word. Default is ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,a.kt)("h3",{id:"suffix"},(0,a.kt)("inlineCode",{parentName:"h3"},"suffix")),(0,a.kt)("p",null,"Optional ",(0,a.kt)("inlineCode",{parentName:"p"},"Control")," to place on the line after the input."),(0,a.kt)("p",null,"This can be used, for example, to add some padding to the text that would otherwise be specified using ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix_text"),", or to add a custom control after the input. The control's baseline is lined up with the input baseline."),(0,a.kt)("p",null,"Only one of ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix_text")," can be specified."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix")," appears before the ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix_icon"),", if both are specified."),(0,a.kt)("h3",{id:"suffix_icon"},(0,a.kt)("inlineCode",{parentName:"h3"},"suffix_icon")),(0,a.kt)("p",null,"An icon that appears after the editable part of the text field and after the ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix_text"),", within the decoration's container."),(0,a.kt)("h3",{id:"suffix_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"suffix_style")),(0,a.kt)("p",null,"The style to use for ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix_text"),"."),(0,a.kt)("h3",{id:"suffix_text"},(0,a.kt)("inlineCode",{parentName:"h3"},"suffix_text")),(0,a.kt)("p",null,"Optional text ",(0,a.kt)("inlineCode",{parentName:"p"},"suffix")," to place on the line after the input."),(0,a.kt)("h3",{id:"text_align"},(0,a.kt)("inlineCode",{parentName:"h3"},"text_align")),(0,a.kt)("p",null,"How the text should be aligned horizontally."),(0,a.kt)("p",null,"Property value is ",(0,a.kt)("inlineCode",{parentName:"p"},"TextAlign")," enum with the following values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"LEFT")," (default)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"RIGHT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CENTER")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"JUSTIFY")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"START")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"END"))),(0,a.kt)("h3",{id:"text_size"},(0,a.kt)("inlineCode",{parentName:"h3"},"text_size")),(0,a.kt)("p",null,"Text size in virtual pixels."),(0,a.kt)("h3",{id:"text_style"},(0,a.kt)("inlineCode",{parentName:"h3"},"text_style")),(0,a.kt)("p",null,"The style to use for the text being edited."),(0,a.kt)("h3",{id:"value"},(0,a.kt)("inlineCode",{parentName:"h3"},"value")),(0,a.kt)("p",null,"Current value of the TextField."),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"focus"},(0,a.kt)("inlineCode",{parentName:"h3"},"focus()")),(0,a.kt)("p",null,"Moves focus to a TextField."),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("h3",{id:"on_blur"},(0,a.kt)("inlineCode",{parentName:"h3"},"on_blur")),(0,a.kt)("p",null,"Fires when the control has lost focus."),(0,a.kt)("h3",{id:"on_change"},(0,a.kt)("inlineCode",{parentName:"h3"},"on_change")),(0,a.kt)("p",null,"Fires when the typed input for the TextField has changed."),(0,a.kt)("h3",{id:"on_focus"},(0,a.kt)("inlineCode",{parentName:"h3"},"on_focus")),(0,a.kt)("p",null,"Fires when the control has received focus."),(0,a.kt)("h3",{id:"on_submit"},(0,a.kt)("inlineCode",{parentName:"h3"},"on_submit")),(0,a.kt)("p",null,"Fires when user presses ENTER while focus is on TextField."))}m.isMDXComponent=!0}}]);