"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[424],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(n),h=l,f=d["".concat(c,".").concat(h)]||d[h]||p[h]||r;return n?a.createElement(f,o(o({ref:t},s),{},{components:n})):a.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:l,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),l=n(6010),r="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return _}});var a=n(7462),l=n(7294),r=n(6010),o=n(2466),i=n(6550),c=n(1980),u=n(7392),s=n(12);function d(e){return function(e){var t,n;return null!=(t=null==(n=l.Children.map(e,(function(e){if(!e||(0,l.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,l.useMemo)((function(){var e=null!=t?t:d(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function h(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,r=(0,i.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,c._X)(o),(0,l.useCallback)((function(e){if(o){var t=new URLSearchParams(r.location.search);t.set(o,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[o,r])]}function m(e){var t,n,a,r,o=e.defaultValue,i=e.queryString,c=void 0!==i&&i,u=e.groupId,d=p(e),m=(0,l.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var l=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:o,tabValues:d})})),v=m[0],k=m[1],b=f({queryString:c,groupId:u}),g=b[0],w=b[1],y=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,s.Nk)(t),a=n[0],r=n[1],[a,(0,l.useCallback)((function(e){t&&r.set(e)}),[t,r])]),_=y[0],N=y[1],E=function(){var e=null!=g?g:_;return h({value:e,tabValues:d})?e:null}();return(0,l.useLayoutEffect)((function(){E&&k(E)}),[E]),{selectedValue:v,selectValue:(0,l.useCallback)((function(e){if(!h({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);k(e),w(e),N(e)}),[w,N,d]),tabValues:d}}var v=n(2389),k="tabList__CuJ",b="tabItem_LNqP";function g(e){var t=e.className,n=e.block,i=e.selectedValue,c=e.selectValue,u=e.tabValues,s=[],d=(0,o.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=s.indexOf(t),a=u[n].value;a!==i&&(d(t),c(a))},h=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var a,l=s.indexOf(e.currentTarget)+1;n=null!=(a=s[l])?a:s[0];break;case"ArrowLeft":var r,o=s.indexOf(e.currentTarget)-1;n=null!=(r=s[o])?r:s[s.length-1]}null==(t=n)||t.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,o=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return s.push(e)},onKeyDown:h,onClick:p},o,{className:(0,r.Z)("tabs__item",b,null==o?void 0:o.className,{"tabs__item--active":i===t})}),null!=n?n:t)})))}function w(e){var t=e.lazy,n=e.children,a=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=r.find((function(e){return e.props.value===a}));return o?(0,l.cloneElement)(o,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function y(e){var t=m(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",k)},l.createElement(g,(0,a.Z)({},e,t)),l.createElement(w,(0,a.Z)({},e,t)))}function _(e){var t=(0,v.Z)();return l.createElement(y,(0,a.Z)({key:String(t)},e))}},2119:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return h}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),o=n(4866),i=n(5162),c=["components"],u={title:"Switch",sidebar_label:"Switch",slug:"switch"},s=void 0,d={unversionedId:"controls/switch",id:"controls/switch",title:"Switch",description:"A toggle represents a physical switch that allows someone to choose between two mutually exclusive options.",source:"@site/docs/controls/switch.md",sourceDirName:"controls",slug:"/controls/switch",permalink:"/docs/controls/switch",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/switch.md",tags:[],version:"current",frontMatter:{title:"Switch",sidebar_label:"Switch",slug:"switch"},sidebar:"docs",previous:{title:"Slider",permalink:"/docs/controls/slider"},next:{title:"TextField",permalink:"/docs/controls/textfield"}},p={},h=[{value:"Examples",id:"examples",level:2},{value:"Basic switches",id:"basic-switches",level:3},{value:"Switch with <code>on_change</code> event",id:"switch-with-on_change-event",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>active_color</code>",id:"active_color",level:3},{value:"<code>active_track_color</code>",id:"active_track_color",level:3},{value:"<code>autofocus</code>",id:"autofocus",level:3},{value:"<code>inactive_thumb_color</code>",id:"inactive_thumb_color",level:3},{value:"<code>inactive_track_color</code>",id:"inactive_track_color",level:3},{value:"<code>label</code>",id:"label",level:3},{value:"<code>label_position</code>",id:"label_position",level:3},{value:"<code>thumb_color</code>",id:"thumb_color",level:3},{value:"<code>track_color</code>",id:"track_color",level:3},{value:"<code>value</code>",id:"value",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_blur</code>",id:"on_blur",level:3},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>on_focus</code>",id:"on_focus",level:3}],f={toc:h};function m(e){var t=e.components,n=(0,l.Z)(e,c);return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A toggle represents a physical switch that allows someone to choose between two mutually exclusive options."),(0,r.kt)("p",null,'For example, "On/Off", "Show/Hide". Choosing an option should produce an immediate result.'),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://flet-controls-gallery.fly.dev/input/switch"},"Live example")),(0,r.kt)("h3",{id:"basic-switches"},"Basic switches"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page):\n    def button_clicked(e):\n        t.value = (\n            f"Switch values are:  {c1.value}, {c2.value}, {c3.value}, {c4.value}."\n        )\n        page.update()\n\n    t = ft.Text()\n    c1 = ft.Switch(label="Unchecked switch", value=False)\n    c2 = ft.Switch(label="Checked switch", value=True)\n    c3 = ft.Switch(label="Disabled switch", disabled=True)\n    c4 = ft.Switch(\n        label="Switch with rendered label_position=\'left\'", label_position=ft.LabelPosition.LEFT\n    )\n    b = ft.ElevatedButton(text="Submit", on_click=button_clicked)\n    page.add(c1, c2, c3, c4, b, t)\n\nft.app(target=main, view=ft.AppView.WEB_BROWSER)\n')))),(0,r.kt)("img",{src:"/img/docs/controls/switch/basic-switch.gif",className:"screenshot-30"}),(0,r.kt)("h3",{id:"switch-with-on_change-event"},"Switch with ",(0,r.kt)("inlineCode",{parentName:"h3"},"on_change")," event"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    def theme_changed(e):\n        page.theme_mode = (\n            ft.ThemeMode.DARK\n            if page.theme_mode == ft.ThemeMode.LIGHT\n            else ft.ThemeMode.LIGHT\n        )\n        c.label = (\n            "Light theme" if page.theme_mode == ft.ThemeMode.LIGHT else "Dark theme"\n        )\n        page.update()\n\n    page.theme_mode = ft.ThemeMode.LIGHT\n    c = ft.Switch(label="Light theme", on_change=theme_changed)\n    page.add(c)\n\nft.app(target=main)\n')))),(0,r.kt)("img",{src:"/img/docs/controls/switch/switch-with-change-event.gif",className:"screenshot-30"}),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"active_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"active_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," to use when this switch is on."),(0,r.kt)("h3",{id:"active_track_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"active_track_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," to use on the track when this switch is on."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"track_color")," returns a non-null color in the ",(0,r.kt)("inlineCode",{parentName:"p"},"selected")," state, it will be used instead of this color."),(0,r.kt)("h3",{id:"autofocus"},(0,r.kt)("inlineCode",{parentName:"h3"},"autofocus")),(0,r.kt)("p",null,"True if the control will be selected as the initial focus. If there is more than one control on a page with autofocus set, then the first one added to the page will get focus."),(0,r.kt)("h3",{id:"inactive_thumb_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"inactive_thumb_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," to use on the thumb when this switch is off."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"thumb_color")," returns a non-null color in the default state, it will be used instead of this color."),(0,r.kt)("h3",{id:"inactive_track_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"inactive_track_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," to use on the track when this switch is off."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"track_color")," returns a non-null color in the default state, it will be used instead of this color."),(0,r.kt)("h3",{id:"label"},(0,r.kt)("inlineCode",{parentName:"h3"},"label")),(0,r.kt)("p",null,"The clickable label to display on the right of the Switch."),(0,r.kt)("h3",{id:"label_position"},(0,r.kt)("inlineCode",{parentName:"h3"},"label_position")),(0,r.kt)("p",null,"Property value is ",(0,r.kt)("inlineCode",{parentName:"p"},"LabelPosition")," enum with ",(0,r.kt)("inlineCode",{parentName:"p"},"LabelPosition.RIGHT")," as default."),(0,r.kt)("h3",{id:"thumb_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"thumb_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of this Switch's thumb."),(0,r.kt)("p",null,"Resolved in the following ",(0,r.kt)("inlineCode",{parentName:"p"},"MaterialState")," states:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SELECTED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HOVERED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FOCUSED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DISABLED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DEFAULT"),' - fallback state, meaning "all other states".')),(0,r.kt)("p",null,"To configure thumb color for all Material states set ",(0,r.kt)("inlineCode",{parentName:"p"},"thumb_color")," value to a literal, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"sw.thumb_color=ft.colors.GREEN\n")),(0,r.kt)("p",null,"To configure thumb color for specific Material states set its value to a dictionary where the key is state name. For example, to configure different fill colors for ",(0,r.kt)("inlineCode",{parentName:"p"},"HOVERED")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"FOCUSED")," states and another color for all other states:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"sw.thumb_color={\n    ft.MaterialState.HOVERED: ft.colors.GREEN,\n    ft.MaterialState.FOCUSED: ft.colors.RED,\n    ft.MaterialState.DEFAULT: ft.colors.BLACK,\n}\n")),(0,r.kt)("h3",{id:"track_color"},(0,r.kt)("inlineCode",{parentName:"h3"},"track_color")),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of this Switch's track."),(0,r.kt)("p",null,"Resolved in the following ",(0,r.kt)("inlineCode",{parentName:"p"},"MaterialState")," states:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SELECTED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HOVERED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FOCUSED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DISABLED")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DEFAULT"),' - fallback state, meaning "all other states".')),(0,r.kt)("h3",{id:"value"},(0,r.kt)("inlineCode",{parentName:"h3"},"value")),(0,r.kt)("p",null,"Current value of the Switch."),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"on_blur"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_blur")),(0,r.kt)("p",null,"Fires when the control has lost focus."),(0,r.kt)("h3",{id:"on_change"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_change")),(0,r.kt)("p",null,"Fires when the state of the Switch is changed."),(0,r.kt)("h3",{id:"on_focus"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_focus")),(0,r.kt)("p",null,"Fires when the control has received focus."))}m.isMDXComponent=!0}}]);