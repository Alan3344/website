"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[5219],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||o;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9169:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={slug:"control-refs",title:"Control Refs",author:"Feodor Fitsner",author_title:"Flet founder and developer",author_url:"https://github.com/FeodorFitsner",author_image_url:"https://avatars0.githubusercontent.com/u/5041459?s=400&v=4",tags:["how-to"]},s=void 0,c={permalink:"/blog/control-refs",editUrl:"https://github.com/flet-dev/website/edit/main/blog/2022-08-03-control-refs.md",source:"@site/blog/2022-08-03-control-refs.md",title:"Control Refs",description:"Flet controls are objects and to access their properties we need to keep references (variables) to those objects.",date:"2022-08-03T00:00:00.000Z",formattedDate:"August 3, 2022",tags:[{label:"how-to",permalink:"/blog/tags/how-to"}],readingTime:2.065,hasTruncateMarker:!1,authors:[{name:"Feodor Fitsner",title:"Flet founder and developer",url:"https://github.com/FeodorFitsner",imageURL:"https://avatars0.githubusercontent.com/u/5041459?s=400&v=4"}],frontMatter:{slug:"control-refs",title:"Control Refs",author:"Feodor Fitsner",author_title:"Flet founder and developer",author_url:"https://github.com/FeodorFitsner",author_image_url:"https://avatars0.githubusercontent.com/u/5041459?s=400&v=4",tags:["how-to"]},prevItem:{title:"Beautiful gradients, button styles and TextField rounded corners in a new Flet release",permalink:"/blog/gradients-button-textfield-styles"},nextItem:{title:"Flet Mobile Strategy",permalink:"/blog/flet-mobile-strategy"}},p={authorsImageUrls:[void 0]},u=[{value:"<code>Ref</code> class",id:"ref-class",level:2}],f={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Flet controls are objects and to access their properties we need to keep references (variables) to those objects."),(0,o.kt)("p",null,"Consider the following example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"{6-8,18,19,21}","{6-8,18,19,21}":!0},'import flet as ft\n\ndef main(page):\n\n    first_name = ft.TextField(label="First name", autofocus=True)\n    last_name = ft.TextField(label="Last name")\n    greetings = ft.Column()\n\n    def btn_click(e):\n        greetings.controls.append(ft.Text(f"Hello, {first_name.value} {last_name.value}!"))\n        first_name.value = ""\n        last_name.value = ""\n        page.update()\n        first_name.focus()\n\n    page.add(\n        first_name,\n        last_name,\n        ft.ElevatedButton("Say hello!", on_click=btn_click),\n        greetings,\n    )\n\nft.app(target=main)\n')),(0,o.kt)("p",null,"In the very beginning of ",(0,o.kt)("inlineCode",{parentName:"p"},"main()")," method we create three controls which we are going to use in button's ",(0,o.kt)("inlineCode",{parentName:"p"},"on_click")," handler: two ",(0,o.kt)("inlineCode",{parentName:"p"},"TextField")," for first and last names and a ",(0,o.kt)("inlineCode",{parentName:"p"},"Column")," - container for greeting messages. We create controls with all their properties set and in the end of ",(0,o.kt)("inlineCode",{parentName:"p"},"main()")," method, in ",(0,o.kt)("inlineCode",{parentName:"p"},"page.add()")," call, we use their references (variables)."),(0,o.kt)("p",null,"When more and mode controls and event handlers added it becomes challenging to keep all control definitions in one place, so they become scattered across ",(0,o.kt)("inlineCode",{parentName:"p"},"main()")," body. Glancing at ",(0,o.kt)("inlineCode",{parentName:"p"},"page.add()")," parameters it's hard to imagine (without constant jumping to variable definitions in IDE) what would the end form look like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"{2-5}","{2-5}":!0},'    page.add(\n        first_name,\n        last_name,\n        ft.ElevatedButton("Say hello!", on_click=btn_click),\n        greetings,\n    )\n')),(0,o.kt)("p",null,"Is ",(0,o.kt)("inlineCode",{parentName:"p"},"first_name")," a TextField, does it have autofocus set? Is greetings a ",(0,o.kt)("inlineCode",{parentName:"p"},"Row")," or a ",(0,o.kt)("inlineCode",{parentName:"p"},"Column"),"?"),(0,o.kt)("h2",{id:"ref-class"},(0,o.kt)("inlineCode",{parentName:"h2"},"Ref")," class"),(0,o.kt)("p",null,"Flet provides ",(0,o.kt)("inlineCode",{parentName:"p"},"Ref")," utility class which allows to define a reference to the control, use that reference in event handlers and set the reference to a real control later, while building a tree. The idea comes from ",(0,o.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/refs-and-the-dom.html"},"React"),"."),(0,o.kt)("p",null,"To define a new typed control reference:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"first_name = ft.Ref[ft.TextField]()\n")),(0,o.kt)("p",null,"To access referenced control (control de-reference) use ",(0,o.kt)("inlineCode",{parentName:"p"},"Ref.current")," property:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# empty first name\nfirst_name.current.value = ""\n')),(0,o.kt)("p",null,"To assign control to a reference set ",(0,o.kt)("inlineCode",{parentName:"p"},"Control.ref")," property to a reference:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"{2}","{2}":!0},'page.add(\n    ft.TextField(ref=first_name, label="First name", autofocus=True)\n)\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"All Flet controls have ",(0,o.kt)("inlineCode",{parentName:"p"},"ref")," property.")),(0,o.kt)("p",null,"We could re-write our program to use references:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:"{7-9,21-24}","{7-9,21-24}":!0},'import flet as ft\n\n\ndef main(page):\n\n    first_name = ft.Ref[ft.TextField]()\n    last_name = ft.Ref[ft.TextField]()\n    greetings = ft.Ref[ft.Column]()\n\n    def btn_click(e):\n        greetings.current.controls.append(\n            ft.Text(f"Hello, {first_name.current.value} {last_name.current.value}!")\n        )\n        first_name.current.value = ""\n        last_name.current.value = ""\n        page.update()\n        first_name.current.focus()\n\n    page.add(\n        ft.TextField(ref=first_name, label="First name", autofocus=True),\n        ft.TextField(ref=last_name, label="Last name"),\n        ft.ElevatedButton("Say hello!", on_click=btn_click),\n        ft.Column(ref=greetings),\n    )\n\nft.app(target=main)\n')),(0,o.kt)("p",null,"Now we can clearly see in ",(0,o.kt)("inlineCode",{parentName:"p"},"page.add()")," the structure of the page and all the controls it's built of."),(0,o.kt)("p",null,"Yes, the logic becomes a little bit more verbose as you need to add ",(0,o.kt)("inlineCode",{parentName:"p"},".current.")," to access ref's control, but it's a matter of personal preference :)"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/guides/python/getting-started"},"Give Flet a try")," and ",(0,o.kt)("a",{parentName:"p",href:"https://discord.gg/dzWXP8SHG8"},"let us know")," what you think!"))}d.isMDXComponent=!0}}]);