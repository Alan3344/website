"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[8218],{3905:function(e,t,l){l.d(t,{Zo:function(){return s},kt:function(){return m}});var n=l(7294);function i(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function a(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?a(Object(l),!0).forEach((function(t){i(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):a(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,n,i=function(e,t){if(null==e)return{};var l,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(i[l]=e[l]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(i[l]=e[l])}return i}var u=n.createContext({}),p=function(e){var t=n.useContext(u),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var l=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(l),f=i,m=d["".concat(u,".").concat(f)]||d[f]||c[f]||a;return l?n.createElement(m,r(r({ref:t},s),{},{components:l})):n.createElement(m,r({ref:t},s))}));function m(e,t){var l=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=l.length,r=new Array(a);r[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<a;p++)r[p]=l[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,l)}f.displayName="MDXCreateElement"},5162:function(e,t,l){l.d(t,{Z:function(){return r}});var n=l(7294),i=l(6010),a="tabItem_Ymn6";function r(e){var t=e.children,l=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,r),hidden:l},t)}},4866:function(e,t,l){l.d(t,{Z:function(){return _}});var n=l(7462),i=l(7294),a=l(6010),r=l(2466),o=l(6550),u=l(1980),p=l(7392),s=l(12);function d(e){return function(e){var t,l;return null!=(t=null==(l=i.Children.map(e,(function(e){if(!e||(0,i.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:l.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function c(e){var t=e.values,l=e.children;return(0,i.useMemo)((function(){var e=null!=t?t:d(l);return function(e){var t=(0,p.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,l])}function f(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function m(e){var t=e.queryString,l=void 0!==t&&t,n=e.groupId,a=(0,o.k6)(),r=function(e){var t=e.queryString,l=void 0!==t&&t,n=e.groupId;if("string"==typeof l)return l;if(!1===l)return null;if(!0===l&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:l,groupId:n});return[(0,u._X)(r),(0,i.useCallback)((function(e){if(r){var t=new URLSearchParams(a.location.search);t.set(r,e),a.replace(Object.assign({},a.location,{search:t.toString()}))}}),[r,a])]}function k(e){var t,l,n,a,r=e.defaultValue,o=e.queryString,u=void 0!==o&&o,p=e.groupId,d=c(e),k=(0,i.useState)((function(){return function(e){var t,l=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(l){if(!f({value:l,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+l+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return l}var i=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:r,tabValues:d})})),h=k[0],v=k[1],g=m({queryString:u,groupId:p}),N=g[0],y=g[1],b=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:p}.groupId),l=(0,s.Nk)(t),n=l[0],a=l[1],[n,(0,i.useCallback)((function(e){t&&a.set(e)}),[t,a])]),_=b[0],C=b[1],w=function(){var e=null!=N?N:_;return f({value:e,tabValues:d})?e:null}();return(0,i.useLayoutEffect)((function(){w&&v(w)}),[w]),{selectedValue:h,selectValue:(0,i.useCallback)((function(e){if(!f({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);v(e),y(e),C(e)}),[y,C,d]),tabValues:d}}var h=l(2389),v="tabList__CuJ",g="tabItem_LNqP";function N(e){var t=e.className,l=e.block,o=e.selectedValue,u=e.selectValue,p=e.tabValues,s=[],d=(0,r.o5)().blockElementScrollPositionUntilNextRender,c=function(e){var t=e.currentTarget,l=s.indexOf(t),n=p[l].value;n!==o&&(d(t),u(n))},f=function(e){var t,l=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":var n,i=s.indexOf(e.currentTarget)+1;l=null!=(n=s[i])?n:s[0];break;case"ArrowLeft":var a,r=s.indexOf(e.currentTarget)-1;l=null!=(a=s[r])?a:s[s.length-1]}null==(t=l)||t.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":l},t)},p.map((function(e){var t=e.value,l=e.label,r=e.attributes;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:function(e){return s.push(e)},onKeyDown:f,onClick:c},r,{className:(0,a.Z)("tabs__item",g,null==r?void 0:r.className,{"tabs__item--active":o===t})}),null!=l?l:t)})))}function y(e){var t=e.lazy,l=e.children,n=e.selectedValue,a=(Array.isArray(l)?l:[l]).filter(Boolean);if(t){var r=a.find((function(e){return e.props.value===n}));return r?(0,i.cloneElement)(r,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function b(e){var t=k(e);return i.createElement("div",{className:(0,a.Z)("tabs-container",v)},i.createElement(N,(0,n.Z)({},e,t)),i.createElement(y,(0,n.Z)({},e,t)))}function _(e){var t=(0,h.Z)();return i.createElement(b,(0,n.Z)({key:String(t)},e))}},7426:function(e,t,l){l.r(t),l.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return f}});var n=l(7462),i=l(3366),a=(l(7294),l(3905)),r=l(4866),o=l(5162),u=["components"],p={title:"FilePicker",sidebar_label:"FilePicker",slug:"filepicker"},s=void 0,d={unversionedId:"controls/filepicker",id:"controls/filepicker",title:"FilePicker",description:"A control that allows you to use the native file explorer to pick single or multiple files, with extensions filtering support and upload.",source:"@site/docs/controls/filepicker.md",sourceDirName:"controls",slug:"/controls/filepicker",permalink:"/website/docs/controls/filepicker",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/filepicker.md",tags:[],version:"current",frontMatter:{title:"FilePicker",sidebar_label:"FilePicker",slug:"filepicker"},sidebar:"docs",previous:{title:"DragTarget",permalink:"/website/docs/controls/dragtarget"},next:{title:"GestureDetector",permalink:"/website/docs/controls/gesturedetector"}},c={},f=[{value:"Examples",id:"examples",level:2},{value:"Pick multiple files",id:"pick-multiple-files",level:3},{value:"All dialog modes",id:"all-dialog-modes",level:3},{value:"Upload multiple files",id:"upload-multiple-files",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>allowed_extensions</code>",id:"allowed_extensions",level:3},{value:"<code>allow_multiple</code>",id:"allow_multiple",level:3},{value:"<code>dialog_title</code>",id:"dialog_title",level:3},{value:"<code>file_name</code>",id:"file_name",level:3},{value:"<code>file_type</code>",id:"file_type",level:3},{value:"<code>initial_directory</code>",id:"initial_directory",level:3},{value:"<code>result</code>",id:"result",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>get_directory_path()</code>",id:"get_directory_path",level:3},{value:"<code>pick_files()</code>",id:"pick_files",level:3},{value:"<code>save_file()</code>",id:"save_file",level:3},{value:"<code>upload()</code>",id:"upload",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_result</code>",id:"on_result",level:3},{value:"<code>on_upload</code>",id:"on_upload",level:3}],m={toc:f};function k(e){var t=e.components,l=(0,i.Z)(e,u);return(0,a.kt)("wrapper",(0,n.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A control that allows you to use the native file explorer to pick single or multiple files, with extensions filtering support and upload."),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://flet-controls-gallery.fly.dev/utility/filepicker"},"Live example")),(0,a.kt)("h3",{id:"pick-multiple-files"},"Pick multiple files"),(0,a.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    def pick_files_result(e: ft.FilePickerResultEvent):\n        selected_files.value = (\n            ", ".join(map(lambda f: f.name, e.files)) if e.files else "Cancelled!"\n        )\n        selected_files.update()\n\n    pick_files_dialog = ft.FilePicker(on_result=pick_files_result)\n    selected_files = ft.Text()\n\n    page.overlay.append(pick_files_dialog)\n\n    page.add(\n        ft.Row(\n            [\n                ft.ElevatedButton(\n                    "Pick files",\n                    icon=ft.icons.UPLOAD_FILE,\n                    on_click=lambda _: pick_files_dialog.pick_files(\n                        allow_multiple=True\n                    ),\n                ),\n                selected_files,\n            ]\n        )\n    )\n\nft.app(target=main)\n')))),(0,a.kt)("h3",{id:"all-dialog-modes"},"All dialog modes"),(0,a.kt)("img",{src:"/img/docs/controls/file-picker/file-picker-all-modes-demo.png",className:"screenshot-70"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/blob/main/python/controls/file-picker/file-picker-all-modes.py"},"Source code")),(0,a.kt)("h3",{id:"upload-multiple-files"},"Upload multiple files"),(0,a.kt)("img",{src:"/img/docs/controls/file-picker/file-picker-multiple-uploads.png",className:"screenshot-40"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/blob/main/python/controls/file-picker/file-picker-upload-progress.py"},"Source code")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"allowed_extensions"},(0,a.kt)("inlineCode",{parentName:"h3"},"allowed_extensions")),(0,a.kt)("p",null,"Allow picking files with specified extensions only."),(0,a.kt)("p",null,"The value of this property is a list of strings, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},'["pdf", "svg", "jpg"]'),"."),(0,a.kt)("h3",{id:"allow_multiple"},(0,a.kt)("inlineCode",{parentName:"h3"},"allow_multiple")),(0,a.kt)("p",null,"Allow selecting multiple files."),(0,a.kt)("h3",{id:"dialog_title"},(0,a.kt)("inlineCode",{parentName:"h3"},"dialog_title")),(0,a.kt)("p",null,"Can be optionally set on desktop platforms to set the modal window title. It will be ignored on other platforms."),(0,a.kt)("h3",{id:"file_name"},(0,a.kt)("inlineCode",{parentName:"h3"},"file_name")),(0,a.kt)("p",null,'Works for "Save file" dialog only. Can be set to a non-empty string to provide a default file name.'),(0,a.kt)("h3",{id:"file_type"},(0,a.kt)("inlineCode",{parentName:"h3"},"file_type")),(0,a.kt)("p",null,"Allow to pick files of specific group."),(0,a.kt)("p",null,"Property value is ",(0,a.kt)("inlineCode",{parentName:"p"},"FilePickerFileType")," enum with the following values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ANY")," (default) - any file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IMAGE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VIDEO")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MEDIA")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"VIDEO")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"IMAGE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"AUDIO")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CUSTOM")," - only files with extensions from ",(0,a.kt)("inlineCode",{parentName:"li"},"allowed_extensions")," list")),(0,a.kt)("h3",{id:"initial_directory"},(0,a.kt)("inlineCode",{parentName:"h3"},"initial_directory")),(0,a.kt)("p",null,"Can be optionally set to an absolute path to specify where the dialog should open. Only supported on Linux, macOS, and Windows."),(0,a.kt)("h3",{id:"result"},(0,a.kt)("inlineCode",{parentName:"h3"},"result")),(0,a.kt)("p",null,"Result is set when the dialog is closed."),(0,a.kt)("p",null,"The value of this property is an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"FilePickerResultEvent")," class:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path"),' - result of "Save file" or "Get directory path" dialogs: selected file path or directory path respectively. ',(0,a.kt)("inlineCode",{parentName:"li"},"None")," if dialog was cancelled."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"files"),' result of "Pick files" dialog: a list of ',(0,a.kt)("inlineCode",{parentName:"li"},"FilePickerFile")," class instances. ",(0,a.kt)("inlineCode",{parentName:"li"},"None")," if dialog was cancelled.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"FilePickerFile")," class properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," - file name without a path."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path")," - full path to a file. Works for desktop and mobile only. ",(0,a.kt)("inlineCode",{parentName:"li"},"None")," on web."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"size")," - file size in bytes.")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"get_directory_path"},(0,a.kt)("inlineCode",{parentName:"h3"},"get_directory_path()")),(0,a.kt)("p",null,"Selects a directory and returns its absolute path."),(0,a.kt)("p",null,"You could either set the following file picker properties or provide their values in the method call:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dialog_title")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"initial_directory"))),(0,a.kt)("h3",{id:"pick_files"},(0,a.kt)("inlineCode",{parentName:"h3"},"pick_files()")),(0,a.kt)("p",null,"Retrieves the file(s) from the underlying platform."),(0,a.kt)("p",null,"You could either set the following file picker properties or provide their values in the method call:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dialog_title")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"initial_directory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_type")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"allowed_extensions")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"allow_multiple"))),(0,a.kt)("h3",{id:"save_file"},(0,a.kt)("inlineCode",{parentName:"h3"},"save_file()")),(0,a.kt)("p",null,"Opens a save file dialog which lets the user select a file path and a file name to save a file."),(0,a.kt)("p",null,"This function does not actually save a file. It only opens the dialog to let the user choose a location and file name. This function only returns the path to this (non-existing) file in ",(0,a.kt)("inlineCode",{parentName:"p"},"FilePicker.result.path")," property."),(0,a.kt)("p",null,"This method is only available on desktop platforms (Linux, macOS & Windows)."),(0,a.kt)("p",null,"You could either set the following file picker properties or provide their values in the method call:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dialog_title")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_name")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"initial_directory")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_type")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"allowed_extensions"))),(0,a.kt)("h3",{id:"upload"},(0,a.kt)("inlineCode",{parentName:"h3"},"upload()")),(0,a.kt)("p",null,"Uploads selected files to specified upload URLs."),(0,a.kt)("p",null,"Before calling upload ",(0,a.kt)("a",{parentName:"p",href:"#pick_files"},(0,a.kt)("inlineCode",{parentName:"a"},"pick_files()"))," must be called, so the internal file picker selection is not empty."),(0,a.kt)("p",null,"Method arguments:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"files")," - a list of ",(0,a.kt)("inlineCode",{parentName:"li"},"FilePickerUploadFile")," class instances.")),(0,a.kt)("p",null,"Each list item specifies which file should be uploaded to the upload URL with ",(0,a.kt)("inlineCode",{parentName:"p"},"PUT")," (default) or ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," method."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"upload_url")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"method")," (",(0,a.kt)("inlineCode",{parentName:"li"},"PUT")," (default), ",(0,a.kt)("inlineCode",{parentName:"li"},"POST"),")")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"upload_url")," is, generally, a presigned URL (like ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/PresignedUrlUploadObject.html"},"AWS S3 object upload URL"),")."),(0,a.kt)("p",null,"For built-in upload storage a signed upload URL can be generated with the following call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'upload_url = page.get_upload_url("dir/filename.ext", 60)\n')),(0,a.kt)("p",null,"First argument is a relative to upload storage path.\nSecond argument is a URL time-to-live in seconds."),(0,a.kt)("p",null,"To enable built-in upload storage provide ",(0,a.kt)("inlineCode",{parentName:"p"},"upload_dir")," argument to ",(0,a.kt)("inlineCode",{parentName:"p"},"flet.app()")," call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'ft.app(target=main, upload_dir="uploads")\n')),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("h3",{id:"on_result"},(0,a.kt)("inlineCode",{parentName:"h3"},"on_result")),(0,a.kt)("p",null,"Fires when file picker dialog is closed."),(0,a.kt)("p",null,"Event object is an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"FilePickerResultEvent")," class. See ",(0,a.kt)("a",{parentName:"p",href:"#result"},(0,a.kt)("inlineCode",{parentName:"a"},"FilePicker.result"))," for class properties."),(0,a.kt)("h3",{id:"on_upload"},(0,a.kt)("inlineCode",{parentName:"h3"},"on_upload")),(0,a.kt)("p",null,"Fires when a file upload progress is updated."),(0,a.kt)("p",null,"Event object is an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"FilePickerUploadEvent")," class:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"file_name")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"progress")," - a value from ",(0,a.kt)("inlineCode",{parentName:"li"},"0.0")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"1.0"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"error"))))}k.isMDXComponent=!0}}]);