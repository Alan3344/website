"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[8642],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),f=a,m=c["".concat(s,".").concat(f)]||c[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3264:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Displaying data",sidebar_label:"Displaying data"},s=void 0,p={unversionedId:"guides/python/displaying-data",id:"guides/python/displaying-data",title:"Displaying data",description:"Text",source:"@site/docs/guides/python/displaying-data.md",sourceDirName:"guides/python",slug:"/guides/python/displaying-data",permalink:"/website/docs/guides/python/displaying-data",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/guides/python/displaying-data.md",tags:[],version:"current",frontMatter:{title:"Displaying data",sidebar_label:"Displaying data"}},u={},c=[{value:"Text",id:"text",level:2},{value:"Text styles",id:"text-styles",level:3},{value:"Icon",id:"icon",level:2},{value:"Image",id:"image",level:2}],d={toc:c};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"text"},"Text"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Text")," control is used to output textual data. Its main properties are ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"size"),", but it also has a number of formatting properties to control its appearence. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'t = ft.Text(\n    value="This is a Text control sample",\n    size=30,\n    color="white",\n    bgcolor="pink",\n    weight="bold",\n    italic=True,\n)\npage.add(t)\n')),(0,i.kt)("img",{src:"/img/docs/getting-started/displaying-data-text.png",className:"screenshot-50"}),(0,i.kt)("h3",{id:"text-styles"},"Text styles"),(0,i.kt)("p",null,"[TBD]","\nFonts?\nVariable weight?\nBuilt-in styles with customization.\nTextField class description."),(0,i.kt)("h2",{id:"icon"},"Icon"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Icons list"),(0,i.kt)("li",{parentName:"ul"},"Link to an app")),(0,i.kt)("h2",{id:"image"},"Image"),(0,i.kt)("p",null,"Note about CORS\nSide-loading assets\nHTML renderer in web to display all formats\nwhat formats are supported?"),(0,i.kt)("p",null,"in the desktop version it does support jpeg, jpg, png\nin the web version it only supports png\nCould you try using html renderer for the web? ",(0,i.kt)("a",{parentName:"p",href:"https://flet.dev/docs/controls/text/#using-system-fonts"},"https://flet.dev/docs/controls/text/#using-system-fonts"),'\nReading this I think "html" renderer must support any format supported by the browser: ',(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/development/platform-integration/web/web-images"},"https://docs.flutter.dev/development/platform-integration/web/web-images")))}f.isMDXComponent=!0}}]);