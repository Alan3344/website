"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[3950],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=i.createContext({}),s=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),f=l,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||r;return n?i.createElement(m,a(a({ref:t},c),{},{components:n})):i.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:l,a[1]=o;for(var s=2;s<r;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return a}});var i=n(7294),l=n(6010),r="tabItem_Ymn6";function a(e){var t=e.children,n=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,a),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return T}});var i=n(7462),l=n(7294),r=n(6010),a=n(2466),o=n(6550),u=n(1980),s=n(7392),c=n(12);function d(e){return function(e){var t,n;return null!=(t=null==(n=l.Children.map(e,(function(e){if(!e||(0,l.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,l.useMemo)((function(){var e=null!=t?t:d(n);return function(e){var t=(0,s.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function f(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function m(e){var t=e.queryString,n=void 0!==t&&t,i=e.groupId,r=(0,o.k6)(),a=function(e){var t=e.queryString,n=void 0!==t&&t,i=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:n,groupId:i});return[(0,u._X)(a),(0,l.useCallback)((function(e){if(a){var t=new URLSearchParams(r.location.search);t.set(a,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[a,r])]}function h(e){var t,n,i,r,a=e.defaultValue,o=e.queryString,u=void 0!==o&&o,s=e.groupId,d=p(e),h=(0,l.useState)((function(){return function(e){var t,n=e.defaultValue,i=e.tabValues;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+i.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var l=null!=(t=i.find((function(e){return e.default})))?t:i[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:a,tabValues:d})})),v=h[0],g=h[1],k=m({queryString:u,groupId:s}),b=k[0],y=k[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),n=(0,c.Nk)(t),i=n[0],r=n[1],[i,(0,l.useCallback)((function(e){t&&r.set(e)}),[t,r])]),T=w[0],N=w[1],x=function(){var e=null!=b?b:T;return f({value:e,tabValues:d})?e:null}();return(0,l.useLayoutEffect)((function(){x&&g(x)}),[x]),{selectedValue:v,selectValue:(0,l.useCallback)((function(e){if(!f({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),N(e)}),[y,N,d]),tabValues:d}}var v=n(2389),g="tabList__CuJ",k="tabItem_LNqP";function b(e){var t=e.className,n=e.block,o=e.selectedValue,u=e.selectValue,s=e.tabValues,c=[],d=(0,a.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=c.indexOf(t),i=s[n].value;i!==o&&(d(t),u(i))},f=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var i,l=c.indexOf(e.currentTarget)+1;n=null!=(i=c[l])?i:c[0];break;case"ArrowLeft":var r,a=c.indexOf(e.currentTarget)-1;n=null!=(r=c[a])?r:c[c.length-1]}null==(t=n)||t.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},s.map((function(e){var t=e.value,n=e.label,a=e.attributes;return l.createElement("li",(0,i.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:function(e){return c.push(e)},onKeyDown:f,onClick:p},a,{className:(0,r.Z)("tabs__item",k,null==a?void 0:a.className,{"tabs__item--active":o===t})}),null!=n?n:t)})))}function y(e){var t=e.lazy,n=e.children,i=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var a=r.find((function(e){return e.props.value===i}));return a?(0,l.cloneElement)(a,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==i})})))}function w(e){var t=h(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",g)},l.createElement(b,(0,i.Z)({},e,t)),l.createElement(y,(0,i.Z)({},e,t)))}function T(e){var t=(0,v.Z)();return l.createElement(w,(0,i.Z)({key:String(t)},e))}},4524:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return f}});var i=n(7462),l=n(3366),r=(n(7294),n(3905)),a=n(4866),o=n(5162),u=["components"],s={title:"ListTile",sidebar_label:"ListTile",slug:"listtile"},c=void 0,d={unversionedId:"controls/listtile",id:"controls/listtile",title:"ListTile",description:"A single fixed-height row that typically contains some text as well as a leading or trailing icon.",source:"@site/docs/controls/listtile.md",sourceDirName:"controls",slug:"/controls/listtile",permalink:"/website/docs/controls/listtile",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/listtile.md",tags:[],version:"current",frontMatter:{title:"ListTile",sidebar_label:"ListTile",slug:"listtile"},sidebar:"docs",previous:{title:"ListView",permalink:"/website/docs/controls/listview"},next:{title:"GridView",permalink:"/website/docs/controls/gridview"}},p={},f=[{value:"Examples",id:"examples",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>autofocus</code>",id:"autofocus",level:3},{value:"<code>content_padding</code>",id:"content_padding",level:3},{value:"<code>dense</code>",id:"dense",level:3},{value:"<code>is_three_line</code>",id:"is_three_line",level:3},{value:"<code>leading</code>",id:"leading",level:3},{value:"<code>selected</code>",id:"selected",level:3},{value:"<code>subtitle</code>",id:"subtitle",level:3},{value:"<code>title</code>",id:"title",level:3},{value:"<code>toggle_inputs</code>",id:"toggle_inputs",level:3},{value:"<code>trailing</code>",id:"trailing",level:3},{value:"<code>url</code>",id:"url",level:3},{value:"<code>url_target</code>",id:"url_target",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_click</code>",id:"on_click",level:3},{value:"<code>on_long_press</code>",id:"on_long_press",level:3}],m={toc:f};function h(e){var t=e.components,n=(0,l.Z)(e,u);return(0,r.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A single fixed-height row that typically contains some text as well as a leading or trailing icon."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://flet-controls-gallery.fly.dev/layout/listtile"},"Live example")),(0,r.kt)("img",{src:"/img/docs/controls/listtile/listtiles.png",className:"screenshot-50"}),(0,r.kt)(a.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page):\n    page.title = "ListTile Examples"\n    page.add(\n        ft.Card(\n            content=ft.Container(\n                width=500,\n                content=ft.Column(\n                    [\n                        ft.ListTile(\n                            title=ft.Text("One-line list tile"),\n                        ),\n                        ft.ListTile(title=ft.Text("One-line dense list tile"), dense=True),\n                        ft.ListTile(\n                            leading=ft.Icon(ft.icons.SETTINGS),\n                            title=ft.Text("One-line selected list tile"),\n                            selected=True,\n                        ),\n                        ft.ListTile(\n                            leading=ft.Image(src="/icons/icon-192.png", fit="contain"),\n                            title=ft.Text("One-line with leading control"),\n                        ),\n                        ft.ListTile(\n                            title=ft.Text("One-line with trailing control"),\n                            trailing=ft.PopupMenuButton(\n                                icon=ft.icons.MORE_VERT,\n                                items=[\n                                    ft.PopupMenuItem(text="Item 1"),\n                                    ft.PopupMenuItem(text="Item 2"),\n                                ],\n                            ),\n                        ),\n                        ft.ListTile(\n                            leading=ft.Icon(ft.icons.ALBUM),\n                            title=ft.Text("One-line with leading and trailing controls"),\n                            trailing=ft.PopupMenuButton(\n                                icon=ft.icons.MORE_VERT,\n                                items=[\n                                    ft.PopupMenuItem(text="Item 1"),\n                                    ft.PopupMenuItem(text="Item 2"),\n                                ],\n                            ),\n                        ),\n                        ft.ListTile(\n                            leading=ft.Icon(ft.icons.SNOOZE),\n                            title=ft.Text("Two-line with leading and trailing controls"),\n                            subtitle=ft.Text("Here is a second title."),\n                            trailing=ft.PopupMenuButton(\n                                icon=ft.icons.MORE_VERT,\n                                items=[\n                                    ft.PopupMenuItem(text="Item 1"),\n                                    ft.PopupMenuItem(text="Item 2"),\n                                ],\n                            ),\n                        ),\n                    ],\n                    spacing=0,\n                ),\n                padding=ft.padding.symmetric(vertical=10),\n            )\n        )\n    )\n\nft.app(target=main)\n')))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"autofocus"},(0,r.kt)("inlineCode",{parentName:"h3"},"autofocus")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"True")," if the control will be selected as the initial focus. If there is more than one control on a page with autofocus set, then the first one added to the page will get focus."),(0,r.kt)("h3",{id:"content_padding"},(0,r.kt)("inlineCode",{parentName:"h3"},"content_padding")),(0,r.kt)("p",null,"The tile's internal padding. Insets a ListTile's contents: its ",(0,r.kt)("inlineCode",{parentName:"p"},"leading"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"title"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"subtitle"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"trailing")," controls."),(0,r.kt)("p",null,"If not set, ",(0,r.kt)("inlineCode",{parentName:"p"},"padding.symmetric(horizontal=16)")," is used."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"container#padding"},(0,r.kt)("inlineCode",{parentName:"a"},"Container.padding"))," property for more information and possible values."),(0,r.kt)("h3",{id:"dense"},(0,r.kt)("inlineCode",{parentName:"h3"},"dense")),(0,r.kt)("p",null,"Whether this list tile is part of a vertically dense list. Dense list tiles default to a smaller height."),(0,r.kt)("h3",{id:"is_three_line"},(0,r.kt)("inlineCode",{parentName:"h3"},"is_three_line")),(0,r.kt)("p",null,"Whether this list tile is intended to display three lines of text."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"True"),", then subtitle must be non-null (since it is expected to give the second and third lines of text)."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"False"),", the list tile is treated as having one line if the subtitle is null and treated as having two lines if the subtitle is non-null."),(0,r.kt)("p",null,"When using a Text control for title and subtitle, you can enforce line limits using ",(0,r.kt)("a",{parentName:"p",href:"text#max_lines"},"Text.max_lines"),"."),(0,r.kt)("h3",{id:"leading"},(0,r.kt)("inlineCode",{parentName:"h3"},"leading")),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Control")," to display before the title."),(0,r.kt)("h3",{id:"selected"},(0,r.kt)("inlineCode",{parentName:"h3"},"selected")),(0,r.kt)("p",null,"If this tile is also enabled then icons and text are rendered with the same color. By default the selected color is the theme's primary color."),(0,r.kt)("h3",{id:"subtitle"},(0,r.kt)("inlineCode",{parentName:"h3"},"subtitle")),(0,r.kt)("p",null,"Additional content displayed below the title. Typically a ",(0,r.kt)("a",{parentName:"p",href:"text"},"Text")," widget."),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_three_line")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"False"),", this should not wrap. If ",(0,r.kt)("inlineCode",{parentName:"p"},"is_three_line")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"True"),", this should be configured to take a maximum of two lines. For example, you can use ",(0,r.kt)("a",{parentName:"p",href:"text#max_lines"},"Text.max_lines")," to enforce the number of lines."),(0,r.kt)("h3",{id:"title"},(0,r.kt)("inlineCode",{parentName:"h3"},"title")),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Control")," to display as primary content of the list tile. Typically a ",(0,r.kt)("a",{parentName:"p",href:"text"},"Text")," control. This should not wrap. To enforce the single line limit, use ",(0,r.kt)("a",{parentName:"p",href:"text#max_lines"},"Text.max_lines"),"."),(0,r.kt)("h3",{id:"toggle_inputs"},(0,r.kt)("inlineCode",{parentName:"h3"},"toggle_inputs")),(0,r.kt)("p",null,"Whether clicking on a list tile should toggle the state of ",(0,r.kt)("inlineCode",{parentName:"p"},"Radio"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Checkbox")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Switch")," inside the tile. Default is ",(0,r.kt)("inlineCode",{parentName:"p"},"False"),"."),(0,r.kt)("h3",{id:"trailing"},(0,r.kt)("inlineCode",{parentName:"h3"},"trailing")),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Control")," to display after the title. Typically an ",(0,r.kt)("a",{parentName:"p",href:"icon"},"Icon")," control."),(0,r.kt)("h3",{id:"url"},(0,r.kt)("inlineCode",{parentName:"h3"},"url")),(0,r.kt)("p",null,"The URL to open when the list tile is clicked. If registered, ",(0,r.kt)("inlineCode",{parentName:"p"},"on_click")," event is fired after that."),(0,r.kt)("h3",{id:"url_target"},(0,r.kt)("inlineCode",{parentName:"h3"},"url_target")),(0,r.kt)("p",null,"Where to open URL in the web mode:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_blank")," (default) - new tab/window."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_self")," - the current tab/window.")),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"on_click"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_click")),(0,r.kt)("p",null,"Fires when a user clicks or taps the list tile."),(0,r.kt)("h3",{id:"on_long_press"},(0,r.kt)("inlineCode",{parentName:"h3"},"on_long_press")),(0,r.kt)("p",null,"Fires when the user long-presses on this list tile."))}h.isMDXComponent=!0}}]);