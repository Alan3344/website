"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[4684],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(t),f=o,m=d["".concat(l,".").concat(f)]||d[f]||s[f]||i;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7847:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={title:"pack",sidebar_label:"pack"},l=void 0,p={unversionedId:"cli/pack",id:"cli/pack",title:"pack",description:"",source:"@site/docs/cli/pack.md",sourceDirName:"cli",slug:"/cli/pack",permalink:"/website/docs/cli/pack",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/cli/pack.md",tags:[],version:"current",frontMatter:{title:"pack",sidebar_label:"pack"},sidebar:"docs",previous:{title:"run",permalink:"/website/docs/cli/run"},next:{title:"publish",permalink:"/website/docs/cli/publish"}},u={},d=[],s={toc:d};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"usage: flet pack [-h] [-v] [-i ICON] [-n NAME] [-D] [--distpath DISTPATH] [--add-data [ADD_DATA ...]] [--hidden-import [HIDDEN_IMPORT ...]] [--product-name PRODUCT_NAME]\n                 [--file-description FILE_DESCRIPTION] [--product-version PRODUCT_VERSION] [--file-version FILE_VERSION] [--company-name COMPANY_NAME] [--copyright COPYRIGHT]\n                 [--bundle-id BUNDLE_ID]\n                 script\n\nPackage Flet app to a standalone bundle.\n\npositional arguments:\n  script                path to a Python script\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --verbose         -v for detailed output and -vv for more detailed\n  -i ICON, --icon ICON  path to an icon file (.ico, .png, .icns)\n  -n NAME, --name NAME  name for the generated executable (Windows) or app bundle (macOS)\n  -D, --onedir          create a one-folder bundle containing an executable (Windows)\n  --distpath DISTPATH   where to put the bundled app (default: ./dist)\n  --add-data [ADD_DATA ...]\n                        additional non-binary files or folders to be added to the executable\n  --hidden-import [HIDDEN_IMPORT ...]\n                        add an import not visible in the code of the script(s)\n  --product-name PRODUCT_NAME\n                        executable product name (Windows) or bundle name (macOS)\n  --file-description FILE_DESCRIPTION\n                        executable file description (Windows)\n  --product-version PRODUCT_VERSION\n                        executable product version (Windows) or bundle version (macOS)\n  --file-version FILE_VERSION\n                        executable file version, n.n.n.n (Windows)\n  --company-name COMPANY_NAME\n                        executable company name (Windows)\n  --copyright COPYRIGHT\n                        executable (Windows) or bundle (macOS) copyright\n  --bundle-id BUNDLE_ID\n                        bundle identifier (macOS)\n")))}f.isMDXComponent=!0}}]);