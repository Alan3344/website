"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[5921],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=l.createContext({}),p=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return l.createElement(i.Provider,{value:t},e.children)},f="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},u=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),f=p(n),u=a,k=f["".concat(i,".").concat(u)]||f[u]||c[u]||r;return n?l.createElement(k,o(o({ref:t},d),{},{components:n})):l.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[f]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3474:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return f}});var l=n(7462),a=n(3366),r=(n(7294),n(3905)),o=["components"],s={title:"Creating Solitaire game with Python and Flet - Part 1",sidebar_label:"Python - Solitaire game",slug:"python-solitaire"},i=void 0,p={unversionedId:"tutorials/python-solitaire",id:"tutorials/python-solitaire",title:"Creating Solitaire game with Python and Flet - Part 1",description:"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0e Flet \u4e00\u8d77\u5728 Python \u4e2d\u9010\u6b65\u5c55\u793a\u8457\u540d\u7684 Klondike Solitaire \u6e38\u620f\u3002 \u4e3a\u4e86\u83b7\u5f97\u7075\u611f\uff0c\u6211\u4eec\u67e5\u770b\u4e86\u6b64\u5728\u7ebf\u6e38\u620f//www.solitr.com/",source:"@site/docs/tutorials/python-solitaire.md",sourceDirName:"tutorials",slug:"/tutorials/python-solitaire",permalink:"/website/docs/tutorials/python-solitaire",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/tutorials/python-solitaire.md",tags:[],version:"current",frontMatter:{title:"Creating Solitaire game with Python and Flet - Part 1",sidebar_label:"Python - Solitaire game",slug:"python-solitaire"},sidebar:"docs",previous:{title:"Python - Trello clone",permalink:"/website/docs/tutorials/trello-clone"},next:{title:"Python - Realtime Chat app",permalink:"/website/docs/tutorials/python-realtime-chat"}},d={},f=[{value:"\u4ece Flet \u5f00\u59cb",id:"\u4ece-flet-\u5f00\u59cb",level:2},{value:"\u53ef\u62d6\u52a8\u5361\u7247\u7684\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u8bc1\u660e",id:"\u53ef\u62d6\u52a8\u5361\u7247\u7684\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u8bc1\u660e",level:2},{value:"\u6b65\u9aa4 1: \u5c06\u5361\u7247\u62d6\u52a8",id:"\u6b65\u9aa4-1-\u5c06\u5361\u7247\u62d6\u52a8",level:3},{value:"\u6b65\u9aa4 2: \u5c06\u5361\u7247\u7247\u653e\u5728\u63d2\u69fd\u6216\u5f39\u8df3\u4e2d \u56de\u6765\u4e86",id:"\u6b65\u9aa4-2-\u5c06\u5361\u7247\u7247\u653e\u5728\u63d2\u69fd\u6216\u5f39\u8df3\u4e2d-\u56de\u6765\u4e86",level:3},{value:"\u6b65\u9aa4 3: \u6dfb\u52a0\u7b2c\u4e8c\u5f20\u5361\u7247",id:"\u6b65\u9aa4-3-\u6dfb\u52a0\u7b2c\u4e8c\u5f20\u5361\u7247",level:3},{value:"\u6b65\u9aa4 4: \u6dfb\u52a0\u66f4\u591a\u63d2\u69fd",id:"\u6b65\u9aa4-4-\u6dfb\u52a0\u66f4\u591a\u63d2\u69fd",level:3},{value:"\u6247\u5f62\u5361\u7247\u7247\u5806",id:"\u6247\u5f62\u5361\u7247\u7247\u5806",level:2},{value:"\u63d2\u69fd\uff0c\u5361\u7247\u548c\u7eb8\u724c\u8bfe\u7a0b",id:"\u63d2\u69fd\u5361\u7247\u548c\u7eb8\u724c\u8bfe\u7a0b",level:3},{value:"\u653e\u7f6e\u5e26\u6709\u504f\u79fb\u7684\u5361\u7247",id:"\u653e\u7f6e\u5e26\u6709\u504f\u79fb\u7684\u5361\u7247",level:3},{value:"\u62d6\u62c9\u5361\u7247\u7247",id:"\u62d6\u62c9\u5361\u7247\u7247",level:3},{value:"Solitaire \u8bbe\u7f6e",id:"solitaire-\u8bbe\u7f6e",level:2},{value:"\u521b\u5efa\u5361\u7247\u7247\u7532\u677f",id:"\u521b\u5efa\u5361\u7247\u7247\u7532\u677f",level:3},{value:"\u521b\u5efa\u63d2\u69fd",id:"\u521b\u5efa\u63d2\u69fd",level:3},{value:"\u4ea4\u6613\u5361\u7247",id:"\u4ea4\u6613\u5361\u7247",level:3},{value:"\u5728 Tableau Pite \u4e2d\u63ed\u793a\u9876\u7ea7\u5361\u7247\u7247",id:"\u5728-tableau-pite-\u4e2d\u63ed\u793a\u9876\u7ea7\u5361\u7247\u7247",level:3},{value:"solitaire \u89c4\u5219",id:"solitaire-\u89c4\u5219",level:2},{value:"\u4e00\u822c\u89c4\u5219",id:"\u4e00\u822c\u89c4\u5219",level:3},{value:"\u57fa\u7840\u89c4\u5219",id:"\u57fa\u7840\u89c4\u5219",level:3},{value:"tableau \u89c4\u5219",id:"tableau-\u89c4\u5219",level:3},{value:"\u5e93\u5b58\u548c\u5e9f\u7269",id:"\u5e93\u5b58\u548c\u5e9f\u7269",level:3},{value:"\u8d62\u5f97\u6e38\u620f",id:"\u8d62\u5f97\u6e38\u620f",level:2},{value:"\u90e8\u7f72\u8be5\u5e94\u7528\u7a0b\u5e8f",id:"\u90e8\u7f72\u8be5\u5e94\u7528\u7a0b\u5e8f",level:2},{value:"summary",id:"summary",level:2}],c={toc:f};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4e0e Flet \u4e00\u8d77\u5728 Python \u4e2d\u9010\u6b65\u5c55\u793a\u8457\u540d\u7684 Klondike Solitaire \u6e38\u620f\u3002 \u4e3a\u4e86\u83b7\u5f97\u7075\u611f\uff0c\u6211\u4eec\u67e5\u770b\u4e86\u6b64\u5728\u7ebf\u6e38\u620f: ",(0,r.kt)("a",{parentName:"p",href:"https://www.solitr.com/"},"https://www.solitr.com/")),(0,r.kt)("p",null,"\u672c\u6559\u7a0b\u9488\u5bf9\u7684\u662f\u5bf9 Python \u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u57fa\u672c\u77e5\u8bc6\u7684\u521d\u5b66\u8005/\u4e2d\u7ea7 Python \u5f00\u53d1\u4eba\u5458\u3002"),(0,r.kt)("p",null,"\u5728\u8fd9\u91cc\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u60a8\u5c06\u4f7f\u7528 Flet \u548c\u672c\u6559\u7a0b\u5b9e\u73b0\u7684\u6700\u7ec8\u7ed3\u679c:\n",(0,r.kt)("a",{parentName:"p",href:"https://gallery.flet.dev/solitaire/"},"https://gallery.flet.dev/solitaire/")),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/part1_final.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u6211\u4eec\u5c06\u6e38\u620f\u5b9e\u73b0\u5206\u89e3\u4e3a\u4ee5\u4e0b\u6b65\u9aa4:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#getting-started-with-flet"},"\u4ece Flet \u5f00\u59cb\u542f\u52a8 Flet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#proof-of-concept-app-for-draggable-cards"},"\u53ef\u62d6\u52a8\u5361\u7247\u7684\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#fanned-card-piles"},"\u6247\u5f62\u5361\u7247\u6869")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#solitaire-setup"},"Solitaire \u8bbe\u7f6e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#solitaire-rules"},"Solitaire \u89c4\u5219")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#winning-the-game"},"\u8d62\u5f97\u6e38\u620f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#deploying-the-app"},"\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f"))),(0,r.kt)("p",null,"\u5728\u7b2c 2 \u90e8\u5206\u4e2d\uff08\u4e0b\u4e00\u4e2a\u6559\u7a0b\u5c06\u4ecb\u7ecd\uff09\u6211\u4eec\u5c06\u6dfb\u52a0 Appbar\uff0c\u5176\u4e2d\u5305\u62ec\u542f\u52a8\u65b0\u6e38\u620f\uff0c\u67e5\u770b\u6e38\u620f\u89c4\u5219\u548c\u66f4\u6539\u6e38\u620f\u8bbe\u7f6e\u7684\u9009\u9879\u3002"),(0,r.kt)("h2",{id:"\u4ece-flet-\u5f00\u59cb"},"\u4ece Flet \u5f00\u59cb"),(0,r.kt)("p",null,"\u8981\u521b\u5efa\u4e00\u4e2a Flet Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u4e0d\u9700\u8981\u4e86\u89e3 HTML\uff0cCSS \u6216 JavaScript\uff0c\u4f46\u662f\u60a8\u786e\u5b9e\u9700\u8981\u6709\u5173 Python \u548c\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u7684\u57fa\u672c\u77e5\u8bc6\u3002"),(0,r.kt)("p",null,"Flet \u9700\u8981 Python 3.7 \u6216\u66f4\u9ad8\u3002 \u8981\u4f7f\u7528 Flet \u5728 Python \u4e2d\u521b\u5efa Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u9700\u8981\u5148\u5b89\u88c5",(0,r.kt)("inlineCode",{parentName:"p"},"flet"),"\u6a21\u5757:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install flet\n")),(0,r.kt)("p",null,"\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Hello-World \u5e94\u7528\u7a0b\u5e8f\u3002"),(0,r.kt)("p",null,"\u4f7f\u7528\u4ee5\u4e0b\u5185\u5bb9\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"hello.py"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page: ft.Page):\n    page.add(ft.Text(value="Hello, world!"))\n\nft.app(target=main)\n')),(0,r.kt)("p",null,"\u8fd0\u884c\u6b64\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u5e26\u6709\u95ee\u5019\u7684\u65b0\u7a97\u53e3:"),(0,r.kt)("img",{src:"/img/docs/tutorial/todo-app-hello-world.png",className:"screenshot-40"}),(0,r.kt)("h2",{id:"\u53ef\u62d6\u52a8\u5361\u7247\u7684\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u8bc1\u660e"},"\u53ef\u62d6\u52a8\u5361\u7247\u7684\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u8bc1\u660e"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u6982\u5ff5\u8bc1\u660e\uff0c\u6211\u4eec\u5c06\u4ec5\u4f7f\u7528\u4e09\u79cd\u7c7b\u578b\u7684\u63a7\u4ef6:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/controls/stack"},"stack")," - \u5c06\u7528\u4f5c\u63d2\u69fd\u548c\u5361\u7247\u7edd\u5bf9\u5b9a\u4f4d\u7684\u7236\u63a7\u5236"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/controls/gesturedetector"},"GETUREDETECTOR")," - \u5c06\u5728\u5806\u6808\u4e2d\u79fb\u52a8\u7684\u5361\u7247"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/controls/container"},"\u5bb9\u5668")," - \u5361\u7247\u5c06\u5220\u9664\u5361\u7247\u7684\u63d2\u69fd\u3002 \u4e5f\u5c06\u7528\u4f5c GETUREDETECTOR \u7684",(0,r.kt)("inlineCode",{parentName:"li"},"content"),"\u3002")),(0,r.kt)("p",null,"\u6211\u4eec\u5df2\u7ecf\u5c06\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u7684\u8bc1\u660e\u5206\u4e3a\u56db\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\uff0c\u56e0\u6b64\u5728\u6bcf\u4e2a\u6b65\u9aa4\u4e4b\u540e\uff0c\u60a8\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u7b80\u77ed\u7a0b\u5e8f\u8fdb\u884c\u8fd0\u884c\u548c\u6d4b\u8bd5\u3002"),(0,r.kt)("h3",{id:"\u6b65\u9aa4-1-\u5c06\u5361\u7247\u62d6\u52a8"},"\u6b65\u9aa4 1: \u5c06\u5361\u7247\u62d6\u52a8"),(0,r.kt)("p",null,"\u5728\u6b64\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"Stack"),"\uff08Solitaire \u6e38\u620f\u5b57\u6bb5\uff09\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"GestureDetector"),"\uff08Solitaire Card\uff09\u3002 \u7136\u540e\uff0c\u8be5\u5361\u7247\u5c06\u88ab\u6dfb\u52a0\u5230\u5806\u6808",(0,r.kt)("inlineCode",{parentName:"p"},"controls"),"\u7684\u5217\u8868\u4e2d\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"Top"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"left"),"\u76d6\u5e3d\u7684\u5c5e\u6027\u7528\u4e8e\u5728\u5806\u6808\u4e2d\u7edd\u5bf9\u5b9a\u4f4d\u5361\u7247\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import flet as ft\n\ndef main(page: ft.Page):\n\n   card = ft.GestureDetector(\n       left=0,\n       top=0,\n       content=ft.Container(bgcolor=ft.colors.GREEN, width=70, height=100),\n   )\n\n   page.add(ft.Stack(controls=[card], width=1000, height=500))\n\nft.app(target=main)\n")),(0,r.kt)("p",null,"\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u4ee5\u67e5\u770b\u6dfb\u52a0\u5230\u5806\u6808\u7684\u5361\u7247:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/drag_and_drop1.png",className:"screenshot-50"}),(0,r.kt)("p",null,"\u4e3a\u4e86\u80fd\u591f\u79fb\u52a8\u5361\u7247\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"drag"),"\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_update"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_update"),"\u4e8b\u4ef6\u4e2d\u8c03\u7528\uff0c\u8be5\u4e8b\u4ef6\u53d1\u751f\u5728\u6bcf\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"drag_interval"),"\u65f6\uff0c\u5f53\u7528\u6237\u7528\u9f20\u6807\u62d6\u52a8\u5361\u7247\u65f6\u3002"),(0,r.kt)("p",null,"\u4e3a\u4e86\u663e\u793a\u8be5\u5361\u7247\u7684\u52a8\u4f5c\uff0c\u6211\u4eec\u5c06\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"drag"),"\u65b9\u6cd5\u4e2d\u66f4\u65b0\u5361\u7247\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"top"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"left"),"\u5c5e\u6027\uff0c\u6bcf\u5f53\u53d1\u751f",(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_update"),"\u4e8b\u4ef6\u65f6\u3002"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u5728\u5806\u6808\u4e2d\u62d6\u52a8 fenureteTector \u7684\u6700\u7b80\u5355\u4ee3\u7801:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import flet as ft\n\n# Use of GestureDetector for with on_pan_update event for dragging card\n# Absolute positioning of controls within stack\n\ndef main(page: ft.Page):\n\n   def drag(e: ft.DragUpdateEvent):\n       e.control.top = max(0, e.control.top + e.delta_y)\n       e.control.left = max(0, e.control.left + e.delta_x)\n       e.control.update()\n\n   card = ft.GestureDetector(\n       mouse_cursor=ft.MouseCursor.MOVE,\n       drag_interval=5,\n       on_pan_update=drag,\n       left=0,\n       top=0,\n       content=ft.Container(bgcolor=ft.colors.GREEN, width=70, height=100),\n   )\n\n   page.add(ft.Stack(controls=[card], width=1000, height=500))\n\nft.app(target=main)\n")),(0,r.kt)("p",null,"\u73b0\u5728\u60a8\u53ef\u4ee5\u770b\u5230\u5361\u7247\u79fb\u52a8:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/drag_and_drop2.gif",className:"screenshot-50"}),(0,r.kt)("p",null,":::\u6ce8\u610f\n\u66f4\u65b0\u63a7\u4ef6\u7684\u4efb\u4f55\u5c5e\u6027\u540e\uff0c\u5e94\u8981\u6c42\u5bf9\u63a7\u4ef6\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"update()"),"\u65b9\u6cd5\uff08\u6216\u5176\u6bcd\u4f53\u63a7\u4ef6\uff09\u8fdb\u884c\u66f4\u65b0\u751f\u6548\u3002\n:::"),(0,r.kt)("h3",{id:""}),(0,r.kt)("h3",{id:"\u6b65\u9aa4-2-\u5c06\u5361\u7247\u7247\u653e\u5728\u63d2\u69fd\u6216\u5f39\u8df3\u4e2d-\u56de\u6765\u4e86"},"\u6b65\u9aa4 2: \u5c06\u5361\u7247\u7247\u653e\u5728\u63d2\u69fd\u6216\u5f39\u8df3\u4e2d \u56de\u6765\u4e86"),(0,r.kt)("p",null,"\u6b64\u6b65\u9aa4\u7684\u76ee\u6807\u662f\uff0c\u5982\u679c\u5b83\u8db3\u591f\u8fd1\uff0c\u5219\u80fd\u591f\u5c06\u5361\u7247\u7247\u653e\u5165\u63d2\u69fd\u4e2d\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u5f39\u56de\u3002"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/drag_and_drop3.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"Container"),"\u63a7\u4ef6\uff0c\u8be5\u63a7\u4ef6\u5c06\u4ee3\u8868\u4e00\u4e2a\u63d2\u69fd\uff0c\u6211\u4eec\u5c06\u5220\u9664\u5361\u7247:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"slot = ft.Container(\n    width=70, height=100, left=200, top=0, border=ft.border.all(1)\n    )\npage.add(ft.Stack(controls = [slot, card], width=1000, height=500))\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_end"),"\u5361\u7247\u7684\u4e8b\u4ef6\u5728\u5220\u9664\u5361\u7247\u65f6\u88ab\u8c03\u7528:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"card = ft.GestureDetector(\n    mouse_cursor=ft.MouseCursor.MOVE,\n    drag_interval=5,\n    on_pan_update=drag,\n    on_pan_end=drop,\n    left=0,\n    top=0,\n    content=ft.Container(bgcolor=ft.colors.GREEN, width=70, height=100),\n)\n")),(0,r.kt)("p",null,"\u5728\u6b64\u4e8b\u4ef6\u4e2d\uff0c\u6211\u4eec\u5c06\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"drop"),"\u65b9\u6cd5\u68c0\u67e5\u5361\u7247\u662f\u5426\u8db3\u591f\u63a5\u8fd1\u63d2\u69fd\uff08\u4f8b\u5982\uff0c\u5b83\u6bd4\u63d2\u69fd\u66f4\u63a5\u8fd1 20px\uff09\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"place"),"\u5b83\u5728\u90a3\u91cc:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def drop(e: ft.DragEndEvent):\n    if (\n        abs(e.control.top - slot.top) < 20\n        and abs(e.control.left - slot.left) < 20\n    ):\n        place(e.control, slot)\n    e.control.update()\n\ndef place(card, slot):\n    """place card to the slot"""\n    card.top = slot.top\n    card.left = slot.left\n    page.update()\n')),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u5982\u679c\u5361\u7247\u8fd8\u4e0d\u591f\u8fd1\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u5f39\u56de\u539f\u59cb\u4f4d\u7f6e\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u539f\u59cb\u4f4d\u7f6e\u5750\u6807\uff0c\u56e0\u4e3a\u5361\u7247\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_update"),"\u4e8b\u4ef6\u4e0a\u66f4\u6539\u4e86\u5361\u7247\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"top"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"left"),"\u5c5e\u6027\u3002"),(0,r.kt)("p",null,"\u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"Solitaire"),"\u7c7b\u5bf9\u8c61\uff0c\u4ee5\u8bb0\u4f4f\u5361\u7247\u7247\u7684\u539f\u59cb\u4f4d\u7f6e\uff0c\u5f53\u5361\u7247\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_start"),"\u4e8b\u4ef6\u79f0\u4e3a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Solitaire:\n   def __init__(self):\n       self.start_top = 0\n       self.start_left = 0\n\nsolitaire = Solitaire()\n\ndef start_drag(e: ft.DragStartEvent):\n    solitaire.start_top = e.control.top\n    solitaire.start_left = e.control.left\n    e.control.update()\n")),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u66f4\u65b0",(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_end"),"\u4e8b\u4ef6\uff0c\u5e76\u4ee5\u5f39\u8df3\u5361\u7247\u7684\u9009\u9879:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def bounce_back(game, card):\n    """return card to its original position"""\n    card.top = game.start_top\n    card.left = game.start_left\n    page.update()\n\ndef drop(e: ft.DragEndEvent):\n    if (\n        abs(e.control.top - slot.top) < 20\n        and abs(e.control.left - slot.left) < 20\n    ):\n        place(e.control, slot)\n\n    else:\n        bounce_back(solitaire, e.control)\n\n    e.control.update()\n')),(0,r.kt)("p",null,"\u53ef\u4ee5\u627e\u5230\u6b64\u6b65\u9aa4\u7684\u5b8c\u6574\u4ee3\u7801",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/blob/main/python/tutorials/solitaire/solitaire-drag-and-drop/step2.py"},"\u6b64\u5904"),"\u3002"),(0,r.kt)("h3",{id:"\u6b65\u9aa4-3-\u6dfb\u52a0\u7b2c\u4e8c\u5f20\u5361\u7247"},"\u6b65\u9aa4 3: \u6dfb\u52a0\u7b2c\u4e8c\u5f20\u5361\u7247"),(0,r.kt)("p",null,"\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u9700\u8981 52 \u5f20\u5361\u7247\u6765\u73a9\u6e38\u620f\u3002 \u4e3a\u4e86\u83b7\u5f97\u6982\u5ff5\u8bc1\u660e\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u7b2c\u4e8c\u5f20\u5361\u7247:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n   card2 = ft.GestureDetector(\n       mouse_cursor=ft.MouseCursor.MOVE,\n       drag_interval=5,\n       on_pan_start=start_drag,\n       on_pan_update=drag,\n       on_pan_end=drop,\n       left=100,\n       top=0,\n       content=ft.Container(bgcolor=ft.colors.YELLOW, width=70, height=100),\n   )\n\n   controls = [slot, card1, card2]\n   page.add(ft.Stack(controls=controls, width=1000, height=500))\n")),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u4e24\u5f20\u5361\u7247\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\uff0c\u5f53\u60a8\u56db\u5904\u79fb\u52a8\u5361\u7247\u65f6\uff0c\u9ec4\u724c\uff08card2\uff09\u6b63\u5728\u6309\u9884\u671f\u79fb\u52a8\uff0c\u4f46\u662f\u7eff\u8272\u5361\u7247\uff08card1\uff09\u5728\u9ec4\u724c\u4e0b\u79fb\u52a8\u3002"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/drag_and_drop4.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u4e4b\u6240\u4ee5\u53d1\u751f\uff0c\u662f\u56e0\u4e3a Card2 \u5728 Card1 \u4e4b\u540e\u6dfb\u52a0\u5230\u5806\u6808",(0,r.kt)("inlineCode",{parentName:"p"},"controls"),"\u7684\u5217\u8868\u4e2d\u3002 \u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5c06\u53ef\u62d6\u52a8\u5361\u7247\u79fb\u81f3",(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_start"),"\u4e8b\u4ef6\u4e0a\u7684\u63a7\u4ef6\u5217\u8868\u7684\u9876\u90e8:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def move_on_top(card, controls):\n    """Moves draggable card to the top of the stack"""\n    controls.remove(card)\n    controls.append(card)\n    page.update()\n\ndef start_drag(e: ft.DragStartEvent):\n    move_on_top(e.control, controls)\n    solitaire.start_top = e.control.top\n    solitaire.start_left = e.control.left\n')),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u53ef\u4ee5\u5c06\u4e24\u5f20\u5361\u7247\u62d6\u52a8\u800c\u6ca1\u6709\u95ee\u9898:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/drag_and_drop5.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u53ef\u4ee5\u627e\u5230\u6b64\u6b65\u9aa4\u7684\u5b8c\u6574\u4ee3\u7801",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/blob/main/python/tutorials/solitaire/solitaire-drag-and-drop/step3.py"},"\u6b64\u5904"),"\u3002"),(0,r.kt)("h3",{id:"\u6b65\u9aa4-4-\u6dfb\u52a0\u66f4\u591a\u63d2\u69fd"},"\u6b65\u9aa4 4: \u6dfb\u52a0\u66f4\u591a\u63d2\u69fd"),(0,r.kt)("p",null,"\u4f5c\u4e3a\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u8bc1\u660e\u7684\u6700\u540e\u4e00\u6b65\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a\u63d2\u69fd:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"slot0 = ft.Container(\n    width=70, height=100, left=0, top=0, border=ft.border.all(1)\n)\n\nslot1 = ft.Container(\n    width=70, height=100, left=200, top=0, border=ft.border.all(1)\n)\n\nslot2 = ft.Container(\n    width=70, height=100, left=300, top=0, border=ft.border.all(1)\n)\n\nslots = [slot0, slot1, slot2]\n")),(0,r.kt)("p",null,"\u521b\u5efa\u65b0\u5361\u7247\u65f6\uff0c\u6211\u4eec\u5c06\u4e0d\u4f1a\u7acb\u5373\u6307\u5b9a\u5176",(0,r.kt)("inlineCode",{parentName:"p"},"top"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"left"),"\u4f4d\u7f6e\uff0c\u800c\u662f\u5c06\u5b83\u4eec\u653e\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"slot0"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# deal cards\nplace(card1, slot0)\nplace(card2, slot0)\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"on_pan_end"),"\u4e8b\u4ef6\uff0c\u6211\u4eec\u68c0\u67e5\u5361\u7247\u662f\u5426\u63a5\u8fd1\u63d2\u69fd\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u6d4f\u89c8\u63d2\u69fd\u5217\u8868\u4ee5\u67e5\u627e\u5e94\u5220\u9664\u5361\u7247\u7684\u4f4d\u7f6e:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def drop(e: ft.DragEndEvent):\n    for slot in slots:\n        if (\n            abs(e.control.top - slot.top) < 20\n        and abs(e.control.left - slot.left) < 20\n        ):\n            place(e.control, slot)\n            e.control.update()\n            return\n\n    bounce_back(solitaire, e.control)\n    e.control.update()\n")),(0,r.kt)("p",null,"\u7ed3\u679c\uff0c\u53ef\u4ee5\u5728\u4e09\u4e2a\u63d2\u69fd\u4e4b\u95f4\u62d6\u52a8\u4e24\u5f20\u5361\u7247:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/drag_and_drop6.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u53ef\u4ee5\u627e\u5230\u6b64\u6b65\u9aa4\u7684\u5b8c\u6574\u4ee3\u7801",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/blob/main/python/tutorials/solitaire/solitaire-drag-and-drop/step4.py"},"\u6b64\u5904"),"\u3002"),(0,r.kt)("p",null,"\u606d\u559c\u60a8\u5b8c\u6210\u4e86 Solitaire \u6e38\u620f\u7684\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\uff01 \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4e0e",(0,r.kt)("inlineCode",{parentName:"p"},"GestureDetector"),"\u4e00\u8d77\u5de5\u4f5c\uff0c\u5c06\u5361\u7247\u79fb\u5165",(0,r.kt)("inlineCode",{parentName:"p"},"Stack"),"\u5e76\u5c06\u5176\u653e\u7f6e\u5230\u67d0\u4e9b",(0,r.kt)("inlineCode",{parentName:"p"},"Containers"),"\u4e2d\uff0c\u8fd9\u662f\u6e38\u620f\u5f00\u59cb\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002"),(0,r.kt)("h2",{id:"\u6247\u5f62\u5361\u7247\u7247\u5806"},"\u6247\u5f62\u5361\u7247\u7247\u5806"),(0,r.kt)("p",null,"\u5728\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u7684\u8bc1\u660e\u4e2d\uff0c\u60a8\u5df2\u7ecf\u5b8c\u6210\u4e86\u5c06\u5361\u7247\u4e22\u7ed9\u63d2\u69fd\u7684\u4efb\u52a1\uff0c\u6216\u8005\u53cd\u5f39\u3002 \u5982\u679c\u8be5\u63d2\u69fd\u4e2d\u5df2\u7ecf\u6709\u4e00\u5f20\u5361\u7247\uff0c\u5219\u5c06\u65b0\u5361\u7247\u653e\u5728\u5176\u9876\u90e8\uff0c\u5c06\u5176\u5b8c\u5168\u8986\u76d6\u3002"),(0,r.kt)("p",null,"\u5728\u5b9e\u9645\u7684\u5355\u4eba\u6e38\u620f\u4e2d\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u4e00\u5f20\u5361\u7247\u7247\u63d2\u69fd\u4e2d\u7684\u5361\u7247\u7247\uff0c\u5219\u8981\u5c06\u53ef\u62d6\u52a8\u5361\u7247\u653e\u4f4e\u4e00\u70b9\uff0c\u4ee5\u4fbf\u60a8\u4e5f\u53ef\u4ee5\u770b\u5230\u4e0a\u4e00\u5f20\u5361\u7247\uff0c\u5982\u679c\u6709\u4e24\u5f20\u5361\u7247\uff0c\u751a\u81f3\u8f83\u4f4e\u3002 \u8fd9\u4e9b\u88ab\u79f0\u4e3a\u201c\u6247\u5f62\u6869\u201d\u3002"),(0,r.kt)("p",null,"\u7136\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u4ece\u6247\u5f62\u5806\u4e2d\u6311\u9009\u4e00\u5f20\u4e0d\u662f\u5806\u7684\u9876\u90e8\u5361\u7247\u7247\uff0c\u5e76\u5c06\u5361\u7247\u4e0e\u4e0b\u9762\u7684\u6240\u6709\u5361\u7247\u4e00\u8d77\u62d6\u52a8:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/fanned_piles3.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u4e3a\u6b64\uff0c\u62e5\u6709\u6709\u5173\u62d6\u52a8\u5361\u7247\u7684\u63d2\u69fd\u4e2d\u4ee5\u53ca\u6389\u843d\u7684\u63d2\u69fd\u4e2d\u7684\u63d2\u69fd\u4e2d\u7684\u4e00\u5806\u5361\u7247\u7684\u4fe1\u606f\u5c06\u5f88\u6709\u7528\u3002 \u8ba9\u6211\u4eec\u91cd\u7ec4\u6211\u4eec\u7684\u7a0b\u5e8f\uff0c\u5e76\u4e3a\u5b9e\u65bd\u6247\u5f62\u6869\u505a\u597d\u51c6\u5907\u3002"),(0,r.kt)("h3",{id:"\u63d2\u69fd\u5361\u7247\u548c\u7eb8\u724c\u8bfe\u7a0b"},"\u63d2\u69fd\uff0c\u5361\u7247\u548c\u7eb8\u724c\u8bfe\u7a0b"),(0,r.kt)("p",null,"\u4e00\u4e2a\u63d2\u69fd\u53ef\u4ee5\u5177\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"pile"),"\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u5c06\u4fdd\u5b58\u5728\u6b64\u5904\u653e\u7f6e\u7684\u5361\u7247\u5217\u8868\u3002 \u73b0\u5728\uff0c\u63d2\u69fd\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"Container"),"\u63a7\u5236\u5bf9\u8c61\uff0c\u6211\u4eec\u65e0\u6cd5\u5411\u5176\u6dfb\u52a0\u4efb\u4f55\u65b0\u5c5e\u6027\u3002 \u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u65b0\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Slot"),"\u7c7b\uff0c\u8be5\u7c7b\u5c06\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"Container"),"\u7ee7\u627f\uff0c\u7136\u540e\u6dfb\u52a0\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"pile"),"\u5c5e\u6027:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"SLOT_WIDTH = 70\nSLOT_HEIGHT = 100\n\nimport flet as ft\n\nclass Slot(ft.Container):\n   def __init__(self, top, left):\n       super().__init__()\n       self.pile=[]\n       self.width=SLOT_WIDTH\n       self.height=SLOT_HEIGHT\n       self.left=left\n       self.top=top\n       self.border=ft.border.all(1)\n")),(0,r.kt)("p",null,"\u4e0e",(0,r.kt)("inlineCode",{parentName:"p"},"Slot"),"\u7c7b\u7c7b\u4f3c\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"slot"),"\u5c5e\u6027\u521b\u5efa\u4e00\u4e2a\u65b0\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Card"),"\u7c7b\uff0c\u8981\u8bb0\u4f4f\u5b83\u9a7b\u7559\u5728\u54ea\u4e2a\u63d2\u69fd\u4e2d\u3002 \u5b83\u5c06\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"GestureDetector"),"\u7ee7\u627f\uff0c\u6211\u4eec\u5c06\u5c06\u6240\u6709\u4e0e\u5361\u7247\u76f8\u5173\u7684\u65b9\u6cd5\u79fb\u52a8\u5230\u5b83:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'CARD_WIDTH = 70\nCARD_HEIGTH = 100\nDROP_PROXIMITY = 20\n\nimport flet as ft\n\nclass Card(ft.GestureDetector):\n   def __init__(self, solitaire, color):\n       super().__init__()\n       self.slot = None\n       self.mouse_cursor=ft.MouseCursor.MOVE\n       self.drag_interval=5\n       self.on_pan_start=self.start_drag\n       self.on_pan_update=self.drag\n       self.on_pan_end=self.drop\n       self.left=None\n       self.top=None\n       self.solitaire = solitaire\n       self.color = color\n       self.content=ft.Container(bgcolor=self.color, width=CARD_WIDTH, height=CARD_HEIGTH)\n\n   def move_on_top(self):\n       """Moves draggable card to the top of the stack"""\n       self.solitaire.controls.remove(self)\n       self.solitaire.controls.append(self)\n       self.solitaire.update()\n\n   def bounce_back(self):\n       """Returns card to its original position"""\n       self.top = self.slot.top\n       self.left = self.slot.left\n       self.update()\n\n   def place(self, slot):\n       """Place card to the slot"""\n       self.top = slot.top\n       self.left = slot.left\n\n   def start_drag(self, e: ft.DragStartEvent):\n       self.move_on_top()\n       self.update()\n\n   def drag(self, e: ft.DragUpdateEvent):\n       self.top = max(0, self.top + e.delta_y)\n       self.left = max(0, self.left + e.delta_x)\n       self.update()\n\n   def drop(self, e: ft.DragEndEvent):\n       for slot in self.solitaire.slots:\n           if (\n               abs(self.top - slot.top) < DROP_PROXIMITY\n           and abs(self.left - slot.left) < DROP_PROXIMITY\n         ):\n               self.place(slot)\n               self.update()\n               return\n\n       self.bounce_back()\n       self.update()\n')),(0,r.kt)("p",null,":::\u6ce8\u610f\n\u6ce8\u610f: \u7531\u4e8e\u6bcf\u5f20\u5361\u7247\u73b0\u5728\u90fd\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"slot"),"\u5c5e\u6027\uff0c\u56e0\u6b64\u65e0\u9700\u8bb0\u4f4f",(0,r.kt)("inlineCode",{parentName:"p"},"start_left"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"start_top"),"\u5728 Solitaire \u7c7b\u4e2d\u7684\u53ef\u62d6\u52a8\u5361\u7247\u7684\u4f4d\u7f6e",(0,r.kt)("inlineCode",{parentName:"p"},"start_top"),"\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u5c06\u5176\u5f39\u56de\u5230\u5b83\u7684\u63d2\u69fd\u3002\n:::\u3002\n:::"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u66f4\u65b0",(0,r.kt)("inlineCode",{parentName:"p"},"Solitaire"),"\u7c7b\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"Stack"),"\u7ee7\u627f\uff0c\u7136\u540e\u5c06\u5361\u7247\u7247\u548c\u63d2\u69fd\u7684\u521b\u5efa\u79fb\u52a8\u5230\u90a3\u91cc:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'SOLITAIRE_WIDTH = 1000\nSOLITAIRE_HEIGHT = 500\n\nimport flet as ft\nfrom slot import Slot\nfrom card import Card\n\nclass Solitaire(ft.Stack):\n   def __init__(self):\n       super().__init__()\n       self.controls = []\n       self.slots = []\n       self.cards = []\n       self.width = SOLITAIRE_WIDTH\n       self.height = SOLITAIRE_HEIGHT\n\n   def did_mount(self):\n       self.create_card_deck()\n       self.create_slots()\n       self.deal_cards()\n\n   def create_card_deck(self):\n       card1 = Card(self, color="GREEN")\n       card2 = Card(self, color="YELLOW")\n       self.cards = [card1, card2]\n\n   def create_slots(self):\n       self.slots.append(Slot(top=0, left=0))\n       self.slots.append(Slot(top=0, left=200))\n       self.slots.append(Slot(top=0, left=300))\n       self.controls.extend(self.slots)\n       self.update()\n\n   def deal_cards(self):\n       self.controls.extend(self.cards)\n       for card in self.cards:\n           card.place(self.slots[0])\n       self.update()\n')),(0,r.kt)("p",null,":::\u6ce8\u610f\n\u5982\u679c\u60a8\u5c1d\u8bd5\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"create_slots()"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"create_card_deck()"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"deal_cards()"),"\u65b9\u6cd5",(0,r.kt)("inlineCode",{parentName:"p"},"__init__()")," solitaire \u7c7b\u65b9\u6cd5",(0,r.kt)("inlineCode",{parentName:"p"},"__init__()"),"\uff0c\u5219\u4f1a\u5bfc\u81f4\u9519\u8bef\u201c\u5fc5\u987b\u5148\u6dfb\u52a0\u63a7\u4ef6\u5230\u9875\u9762\u4e0a\u201d\u3002 \u4e3a\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u6211\u4eec\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"did_mount()"),"\u65b9\u6cd5\u5185\u521b\u5efa\u63d2\u69fd\u548c\u5361\u7247\u7247\uff0c\u8be5\u65b9\u6cd5\u5728\u5c06\u5806\u6808\u6dfb\u52a0\u5230\u9875\u9762\u540e\u7acb\u5373\u53d1\u751f\u3002\n:::"),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u7a0b\u5e8f\u5c06\u975e\u5e38\u7b80\u5355:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import flet as ft\nfrom solitaire import Solitaire\n\ndef main(page: ft.Page):\n\n   solitaire = Solitaire()\n\n   page.add(solitaire)\n\nft.app(target=main)\n")),(0,r.kt)("p",null,"\u60a8\u53ef\u4ee5\u627e\u5230\u6b64\u6b65\u9aa4\u7684\u5b8c\u6574\u6e90\u4ee3\u7801",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/tree/main/python/tutorials/solitaire/solitaire-classes"},"\u6b64\u5904"),"\u3002 \u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u6982\u5ff5\u5e94\u7528\u7a0b\u5e8f\u5b8c\u5168\u76f8\u540c\uff0c\u4f46\u7528\u65b0\u7c7b\u91cd\u5199\uff0c\u53ef\u4ee5\u4e3a\u5176\u6dfb\u52a0\u66f4\u590d\u6742\u7684\u529f\u80fd\u3002"),(0,r.kt)("h3",{id:"\u653e\u7f6e\u5e26\u6709\u504f\u79fb\u7684\u5361\u7247"},"\u653e\u7f6e\u5e26\u6709\u504f\u79fb\u7684\u5361\u7247"),(0,r.kt)("p",null,"\u5f53\u5361\u7247\u5c06\u5361\u7247\u653e\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"card.place()"),"\u65b9\u6cd5\u4e2d\u7684\u63d2\u69fd\u4e0a\u65f6\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e09\u4ef6\u4e8b:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u5b58\u5728\uff0c\u5c06\u5361\u7247\u4ece\u5176\u539f\u59cb\u63d2\u69fd\u4e2d\u5220\u9664"),(0,r.kt)("li",{parentName:"ul"},"\u5c06\u5361\u7247\u7684\u63d2\u69fd\u66f4\u6539\u4e3a\u65b0\u63d2\u69fd"),(0,r.kt)("li",{parentName:"ul"},"\u5c06\u5361\u7247\u6dfb\u52a0\u5230\u65b0\u7684\u8001\u864e\u673a\u5806\u4e2d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def place(self, slot):\n    # remove card from it's original slot, if exists\n    if self.slot is not None:\n        self.slot.pile.remove(self)\n\n    # change card's slot to a new slot\n    self.slot = slot\n\n    # add card to the new slot's pile\n    slot.pile.append(self)\n")),(0,r.kt)("p",null,"\u66f4\u65b0\u5361\u7247\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"top"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"left"),"\u4f4d\u7f6e\u65f6\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"left"),"\u5e94\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"top"),"\u5c06\u53d6\u51b3\u4e8e\u65b0\u63d2\u69fd\u5806\u7684\u957f\u5ea6:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"    self.top = slot.top + len(slot.pile) * CARD_OFFSET\n    self.left = slot.left\n")),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u5c06\u5361\u7247\u7247\u653e\u7f6e\u5728\u504f\u79fb\u91cf\u4e2d\uff0c\u8fd9\u4f7f\u6211\u4eec\u6563\u53d1\u7740\u6247\u5f62\u7684\u5806\u5916\u89c2:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/fanned_piles1.png",className:"screenshot-50"}),(0,r.kt)("h3",{id:"\u62d6\u62c9\u5361\u7247\u7247"},"\u62d6\u62c9\u5361\u7247\u7247"),(0,r.kt)("p",null,"\u5982\u679c\u60a8\u73b0\u5728\u5c1d\u8bd5\u4ece\u5806\u7684\u5e95\u90e8\u62d6\u52a8\u5361\u7247\u7247\uff0c\u5219\u770b\u8d77\u6765\u50cf\u8fd9\u6837:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/fanned_piles2.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u4e3a\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0\u4e0e\u53ef\u62d6\u52a8\u5361\u7247\u4e00\u8d77\u4f7f\u7528\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u4e0e\u53ef\u62d6\u52a8\u5806\u4e00\u8d77\u4f7f\u7528\u3002"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"get_draggable_pile()"),"\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u8fd4\u56de\u9700\u8981\u4e00\u8d77\u62d6\u52a8\u7684\u5361\u7247\u7684\u5217\u8868\uff0c\u4ece\u60a8\u9009\u62e9\u7684\u5361\u7247\u5f00\u59cb:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def get_draggable_pile(self):\n    """returns list of cards that will be dragged together, starting with the current card"""\n    if self.slot is not None:\n        return self.slot.pile[self.slot.pile.index(self):]\n    return [self]\n')),(0,r.kt)("p",null,"\u7136\u540e\uff0c\u6211\u4eec\u5c06\u66f4\u65b0",(0,r.kt)("inlineCode",{parentName:"p"},"move_on_top()"),"\u65b9\u6cd5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def move_on_top(self):\n    """Brings draggable card pile to the top of the stack"""\n    for card in draggable_pile:\n        self.solitaire.controls.remove(card)\n        self.solitaire.controls.append(card)\n    self.solitaire.update()\n')),(0,r.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0",(0,r.kt)("inlineCode",{parentName:"p"},"drag()"),"\u65b9\u6cd5\uff0c\u4ee5\u904d\u5386\u53ef\u62d6\u52a8\u7684\u5806\u5e76\u66f4\u65b0\u6240\u6709\u88ab\u62d6\u52a8\u5361\u7247\u7684\u4f4d\u7f6e:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def drag(self, e: ft.DragUpdateEvent):\n    draggable_pile = self.get_draggable_pile()\n    for card in draggable_pile:\n        card.top = max(0, self.top + e.delta_y) + draggable_pile.index(card) * CARD_OFFSET\n        card.left = max(0, self.left + e.delta_x)\n        card.update()\n")),(0,r.kt)("p",null,"\u53e6\u5916\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0",(0,r.kt)("inlineCode",{parentName:"p"},"place()"),"\u65b9\u6cd5\uff0c\u5c06\u53ef\u62d6\u52a8\u5806\u653e\u5728\u63d2\u69fd\u4e2d:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def place(self, slot):\n    """Place draggable pile to the slot"""\n    draggable_pile = self.get_draggable_pile()\n\n    for card in draggable_pile:\n        card.top = slot.top + len(slot.pile) * CARD_OFFSET\n        card.left = slot.left\n\n        # remove card from it\'s original slot, if exists\n        if card.slot is not None:\n            card.slot.pile.remove(card)\n\n        # change card\'s slot to a new slot\n        card.slot = slot\n\n        # add card to the new slot\'s pile\n        slot.pile.append(card)\n\n    self.solitaire.update()\n')),(0,r.kt)("p",null,"\u6700\u540e\uff0c\u5982\u679c\u627e\u4e0d\u5230\u8fd1\u8ddd\u79bb\u7684\u63d2\u69fd\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6574\u4e2a\u5806\u5f39\u56de\u5176\u539f\u59cb\u4f4d\u7f6e:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def bounce_back(self):\n    """Returns draggable pile to its original position"""\n    draggable_pile = self.get_draggable_pile()\n    for card in draggable_pile:\n        card.top = card.slot.top + card.slot.pile.index(card) * CARD_OFFSET\n        card.left = card.slot.left\n    self.solitaire.update()\n')),(0,r.kt)("p",null,"\u53ef\u4ee5\u627e\u5230\u6b64\u6b65\u9aa4\u7684\u5b8c\u6574\u6e90\u4ee3\u7801",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/tree/main/python/tutorials/solitaire/solitaire-fanned-piles"},"\u6b64\u5904"),"\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5361\u7247\u7247\u62d6\u653e\u5806\u4e2d\u7684\u5806\u5806\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u5b9e\u73b0\u771f\u6b63\u7684\u4ea4\u6613\u4e86\uff01"),(0,r.kt)("h2",{id:"solitaire-\u8bbe\u7f6e"},"Solitaire \u8bbe\u7f6e"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u6709\u5173 Klondike\uff08Solitaire\uff09\u7684","[Wikipedia \u6587\u7ae0]","(",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Klondike_(solitaire)"},"https://en.wikipedia.org/wiki/Klondike_(solitaire)")," #rules\uff09:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"klondike \u64ad\u653e\u4e86\u6807\u51c6\u7684 52 \u5f20\u724c\u7532\u677f\u3002")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6539\u7ec4\u540e\uff0c\u4ece\u5de6\u5230\u53f3\u653e\u7f6e\u4e86\u4e00\u5806\u4e03\u5f20\u6247\u5f62\u7eb8\u724c\u7684\u56fe\u7247\u3002 \u4ece\u5de6\u5230\u53f3\uff0c\u6bcf\u4e2a\u6869\u90fd\u5305\u542b\u6bd4\u6700\u540e\u4e00\u5f20\u5361\u7247\u66f4\u591a\u7684\u5361\u7247\u3002 \u7b2c\u4e00\u548c\u6700\u5de6\u7684\u5806\u5305\u542b\u4e00\u5f20\u4e0a\u5347\u7684\u5361\u7247\u7247\uff0c\u7b2c\u4e8c\u5757\u5305\u542b\u4e24\u5f20\u5361\u7247\u7247\uff0c\u7b2c\u4e09\u5f20\u5806\u5305\u542b\u4e09\u5f20\u5361\u7247\u7247\uff0c\u7b2c\u56db\u5f20\u6869\u5305\u542b\u56db\u5f20\u5361\u7247\u7247\uff0c\u7b2c\u4e94\u5f20\u5806\u5305\u542b\u4e94\u5f20\u5361\u7247\u7247 \u7b2c\u4e03\u6869\u5305\u542b\u4e03\u5f20\u5361\u7247\u3002 \u6bcf\u4e2a\u5806\u7684\u6700\u9ad8\u5361\u7247\u90fd\u88ab\u671d\u4e0a\u3002\n\u5176\u4f59\u5361\u7247\u7247\u5f62\u6210\u5e93\u5b58\uff0c\u5e76\u5c06\u5176\u671d\u5411\u5e03\u5c40\u5de6\u4e0a\u65b9\u3002")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u56db\u4e2a\u57fa\u7840\uff08\u56fe\u53f3\u4e0a\u65b9\u7684\u8f7b\u77e9\u5f62\uff09\u662f\u7531\u4ece Ace\uff08\u4f4e\u70b9\u4e2d\u7684\u4f4e\uff09\u5230 King \u5efa\u7acb\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u989c\u8272\u6765\u5efa\u9020 Tableau Pile\u3002")),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/game_setup_wiki.png",className:"screenshot-40"}),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u9010\u6b65\u8fdb\u884c\u6b64\u8bbe\u7f6e\u3002"),(0,r.kt)("h3",{id:"\u521b\u5efa\u5361\u7247\u7247\u7532\u677f"},"\u521b\u5efa\u5361\u7247\u7247\u7532\u677f"),(0,r.kt)("p",null,"\u7b2c\u4e00\u6b65\u662f\u5728\u7eb8\u724c\u73ed\u4e0a\u521b\u5efa\u5b8c\u6574\u7684\u5361\u7247\u7247\u3002 \u6bcf\u5f20\u5361\u7247\u5e94\u5177\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"suit"),"\u5c5e\u6027\uff08\u5fc3\u810f\uff0c\u94bb\u77f3\uff0c\u4ff1\u4e50\u90e8\u548c\u9ed1\u6843\uff09\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"rank"),"\u5c5e\u6027\uff08\u4ece\u738b\u724c\u5230\u56fd\u738b\uff09\u3002\n\u5bf9\u4e8e\u8fd9\u5957\u897f\u88c5\uff0c\u5b83\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"color"),"\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a Tableau Pile \u662f\u7531\u5176\u4ed6\u989c\u8272\u6784\u5efa\u7684\u3002"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u7b49\u7ea7\u800c\u8a00\uff0c\u5176",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u57fa\u7840\u662f\u4ece\u6700\u4f4e\uff08ACE\uff09\u5230\u6700\u9ad8\uff08\u56fd\u738b\uff09\u7b49\u7ea7\u503c\u7684\u57fa\u7840\u3002"),(0,r.kt)("p",null,"\u5728 solitaire.py \u4e2d\uff0c\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"Suite"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"Rank"),"\u7c7b:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Suite:\n    def __init__(self, suite_name, suite_color):\n        self.name = suite_name\n        self.color = suite_color\n\nclass Rank:\n    def __init__(self, card_name, card_value):\n        self.name = card_name\n        self.value = card_value\n")),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"Card"),"\u7c7b\u4e2d\uff0c\u6211\u4eec\u4e0d\u63a5\u53d7\u989c\u8272\u4f5c\u4e3a\u53c2\u6570\uff0c\u800c\u662f\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"__init__()"),"\u4e2d\u63a5\u53d7",(0,r.kt)("inlineCode",{parentName:"p"},"suite"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"rank"),"\u3002 \u6b64\u5916\uff0c\u6211\u4eec\u5c06",(0,r.kt)("inlineCode",{parentName:"p"},"face_up"),"\u5c5e\u6027\u6dfb\u52a0\u5230\u5361\u7247\u4e2d\uff0c\u5e76\u4e14\u5bb9\u5668\u73b0\u5728\u5c06\u5177\u6709\u5361\u7247\u7684\u80cc\u9762\u56fe\u50cf\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"content"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'class Card(ft.GestureDetector):\n    def __init__(self, solitaire, suite, rank):\n        super().__init__()\n        self.mouse_cursor=ft.MouseCursor.MOVE\n        self.drag_interval=5\n        self.on_pan_start=self.start_drag\n        self.on_pan_update=self.drag\n        self.on_pan_end=self.drop\n        self.suite=suite\n        self.rank=rank\n        self.face_up=False\n        self.top=None\n        self.left=None\n        self.solitaire = solitaire\n        self.slot = None\n        self.content=ft.Container(\n            width=CARD_WIDTH,\n            height=CARD_HEIGTH,\n            border_radius = ft.border_radius.all(6),\n            content=ft.Image(src="card_back.png"))\n')),(0,r.kt)("p",null,"\u9762\u671d\u4e0a\u5361\u7247\u7684\u6240\u6709\u56fe\u50cf\u4ee5\u53ca\u5361\u7247\u80cc\u90e8\u7684\u6240\u6709\u56fe\u50cf\u90fd\u5b58\u50a8\u5728\u4e0e main..py ","[link go github]","\u540c\u4e00\u76ee\u5f55\u4e2d\u7684\u201c\u56fe\u50cf\u201d\u6587\u4ef6\u5939\u4e2d\u3002"),(0,r.kt)("p",null,":::\u6ce8\u610f\n\u4e3a\u4e86\u5f15\u7528\u5bf9\u8981\u5de5\u4f5c\u7684\u56fe\u50cf\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u6307\u5b9a\u6587\u4ef6\u5939\u4f4d\u4e8e main.py \u4e2d\u7684 Assets_dir \u4e2d:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'ft.app(target=main, assets_dir="images")\n')),(0,r.kt)("p",null,":::"),(0,r.kt)("p",null,"\u6700\u540e\uff0c\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"solitaire.create_card_deck()"),"\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u5957\u4ef6\u548c\u6392\u540d\u7684\u5217\u8868\uff0c\u7136\u540e\u521b\u5efa 52 \u5f20\u5361\u7247\u724c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def create_card_deck(self):\n    suites = [\n        Suite("hearts", "RED"),\n        Suite("diamonds", "RED"),\n        Suite("clubs", "BLACK"),\n        Suite("spades", "BLACK"),\n    ]\n    ranks = [\n        Rank("Ace", 1),\n        Rank("2", 2),\n        Rank("3", 3),\n        Rank("4", 4),\n        Rank("5", 5),\n        Rank("6", 6),\n        Rank("7", 7),\n        Rank("8", 8),\n        Rank("9", 9),\n        Rank("10", 10),\n        Rank("Jack", 11),\n        Rank("Queen", 12),\n        Rank("King", 13),\n    ]\n\n    self.cards = []\n\n    for suite in suites:\n        for rank in ranks:\n            self.cards.append(Card(solitaire=self, suite=suite, rank=rank))\n')),(0,r.kt)("p",null,"\u8be5\u5361\u7247\u7532\u677f\u5df2\u7ecf\u51c6\u5907\u597d\u88ab\u4ea4\u6613\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e3a\u5176\u521b\u5efa\u5e03\u5c40\u3002"),(0,r.kt)("h3",{id:"\u521b\u5efa\u63d2\u69fd"},"\u521b\u5efa\u63d2\u69fd"),(0,r.kt)("p",null,"klondike solitaire \u6e38\u620f\u5e03\u5c40\u5e94\u8be5\u770b\u8d77\u6765\u50cf\u8fd9\u6837:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/solitaire-layout.svg",className:"screenshot-80"}),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"solitaire.create_slots()"),"\u4e2d\u521b\u5efa\u6240\u6709\u8fd9\u4e9b\u63d2\u69fd:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def create_slots(self):\n\n    self.stock = Slot(top=0, left=0, border=ft.border.all(1))\n    self.waste = Slot(top=0, left=100, border=None)\n\n    self.foundations = []\n    x = 300\n    for i in range(4):\n        self.foundations.append(Slot(top=0, left=x, border=ft.border.all(1, "outline")))\n        x += 100\n\n    self.tableau = []\n    x = 0\n    for i in range(7):\n        self.tableau.append(Slot(top=150, left=x, border=None))\n        x += 100\n\n    self.controls.append(self.stock)\n    self.controls.append(self.waste)\n    self.controls.extend(self.foundations)\n    self.controls.extend(self.tableau)\n    self.update()\n')),(0,r.kt)("p",null,":::\u6ce8\u610f\n\u6ce8\u610f: \u6709\u4e9b\u63d2\u69fd\u5e94\u8be5\u5177\u6709\u53ef\u89c1\u7684\u8fb9\u6846\uff0c\u6709\u4e9b\u5219\u4e0d\u5e94\u8be5\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8fb9\u6846\u6dfb\u52a0\u5230\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"Slot"),"\u5bf9\u8c61\u7684\u8bba\u70b9\u5217\u8868\u4e2d\u3002\n:::"),(0,r.kt)("h3",{id:"\u4ea4\u6613\u5361\u7247"},"\u4ea4\u6613\u5361\u7247"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u4ece\u6574\u7406\u5361\u7247\u7247\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u63a7\u4ef6\u5217\u8868\u4e2d\u5f00\u59cb:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def deal_cards(self):\n    random.shuffle(self.cards)\n    self.controls.extend(self.cards)\n    self.update()\n")),(0,r.kt)("p",null,"\u7136\u540e\uff0c\u6211\u4eec\u5c06\u5c06\u5361\u7247\u4ece\u5de6\u5230\u53f3\u4ea4\u4ed8\u7ed9 Tableau Pile\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u5806\u5305\u542b\u4e00\u5f20\u6bd4\u6700\u540e\u4e00\u5f20\u5361\u7247\u66f4\u591a\u7684\u5361\u7247\uff0c\u7136\u540e\u5c06\u5269\u4f59\u7684\u5361\u7247\u653e\u5728\u5e93\u5b58\u5806\u4e2d:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def deal_cards(self):\n    random.shuffle(self.cards)\n    self.controls.extend(self.cards)\n\n    # deal to tableau\n    first_slot = 0\n    remaining_cards = self.cards\n\n    while first_slot < len(self.tableau):\n        for slot in self.tableau[first_slot:]:\n            top_card = remaining_cards[0]\n            top_card.place(slot)\n            remaining_cards.remove(top_card)\n        first_slot +=1\n\n    # place remaining cards to stock pile\n    for card in remaining_cards:\n        card.place(self.stock)\n\n    self.update()\n")),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u6765\u8fd0\u884c\u7a0b\u5e8f\uff0c\u770b\u770b\u6211\u4eec\u73b0\u5728\u7684\u4f4d\u7f6e:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/game_setup1.png",className:"screenshot-40"}),(0,r.kt)("p",null,"\u5c06\u5e93\u5b58\u7684\u5361\u7247\u7247\u653e\u5728\u6247\u5f62\u7684\u5806\u4e2d\uff0c\u5176\u65b9\u5f0f\u4e0e Tableau \u76f8\u540c\uff0c\u4f46\u5e94\u8be5\u653e\u7f6e\u5728\u5e38\u89c4\u5806\u4e2d\u3002 \u8981\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u5c06\u6b64\u6761\u4ef6\u6dfb\u52a0\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"card.place()"),"\u65b9\u6cd5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def place(self, slot):\n    """Place draggable pile to the slot"""\n    if slot in self.solitaire.tableau:\n        self.top = slot.top + len(slot.pile) * self.solitaire.card_offset\n    else:\n        self.top = slot.top\n    self.left = slot.left\n')),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u5361\u7247\u7247\u4ec5\u653e\u5728\u6247\u5f62\u5806\u4e2d\u5230 Tableau:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/game_setup2.png",className:"screenshot-40"}),(0,r.kt)("p",null,"\u5982\u679c\u60a8\u73b0\u5728\u5c1d\u8bd5\u79fb\u52a8\u5361\u7247\u7247\uff0c\u5219\u8be5\u7a0b\u5e8f\u5c06\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002 \u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"card.drop()"),"\u4e2d\uff0c\u65b9\u6cd5\u901a\u8fc7\u6211\u4eec\u73b0\u5728\u6ca1\u6709\u7684\u63d2\u69fd\u5217\u8868\u8fed\u4ee3\u3002"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u66f4\u65b0\u4ee5\u901a\u8fc7\u57fa\u7840\u548c Tableau \u5206\u5f00\u8fdb\u884c\u7684\u65b9\u6cd5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def drop(self, e: ft.DragEndEvent):\n    for slot in self.solitaire.tableau:\n        if (\n            abs(self.top - (slot.top + len(slot.pile) * CARD_OFFSET)) < DROP_PROXIMITY\n        and abs(self.left - slot.left) < DROP_PROXIMITY\n        ):\n            self.place(slot)\n            self.update()\n            return\n\n    for slot in self.solitaire.foundations:\n        if (\n            abs(self.top - slot.top) < DROP_PROXIMITY\n        and abs(self.left - slot.left) < DROP_PROXIMITY\n        ):\n            self.place(slot)\n            self.update()\n            return\n\n    self.bounce_back()\n    self.update()\n")),(0,r.kt)("h3",{id:"\u5728-tableau-pite-\u4e2d\u63ed\u793a\u9876\u7ea7\u5361\u7247\u7247"},"\u5728 Tableau Pite \u4e2d\u63ed\u793a\u9876\u7ea7\u5361\u7247\u7247"),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u6211\u4eec\u6709\u4e86\u6b63\u786e\u7684\u6e38\u620f\u8bbe\u7f6e\uff0c\u4f5c\u4e3a\u6700\u540e\u7684\u89e6\u6478\uff0c\u6211\u4eec\u9700\u8981\u5728 Tableau Pile \u4e2d\u63ed\u793a\u6700\u4e0a\u65b9\u7684\u5361\u7247\u7247\u3002"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"Slot"),"\u7c7b\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"get_top_card()"),"\u65b9\u6cd5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_top_card(self):\n    if len(self.pile) > 0:\n        return self.pile[-1]\n")),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"Card"),"\u7c7b\u4e2d\uff0c\u521b\u5efa",(0,r.kt)("inlineCode",{parentName:"p"},"turn_dace_up()"),"\u65b9\u6cd5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def turn_face_up(self):\n    self.face_up = True\n    self.content.content.src=f"/images/{self.rank.name}_{self.suite.name}.svg"\n    self.update()\n')),(0,r.kt)("p",null,"\u6700\u540e\uff0c\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"solitaire.deal_cards()"),"\u4e2d\u663e\u793a\u6700\u4e0a\u65b9\u7684\u5361\u7247:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"for slot in self.tableau:\n    slot.get_top_card().turn_face_up()\n    self.update()\n")),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u770b\u770b\u73b0\u5728\u7684\u5916\u89c2:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/game_setup3.png",className:"screenshot-50"}),(0,r.kt)("p",null,"\u53ef\u4ee5\u627e\u5230\u6b64\u6b65\u9aa4\u7684\u5b8c\u6574\u6e90\u4ee3\u7801",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/tree/main/python/tutorials/solitaire/solitaire-game-setup"},"\u6b64\u5904"),"\u3002"),(0,r.kt)("p",null,"\u606d\u559c\u60a8\u5b8c\u6210\u4e86 Solitaire \u6e38\u620f\u8bbe\u7f6e\uff01 \u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684 52 \u5f20\u724c\u7532\u677f\uff0c\u5176\u4e2d\u5305\u62ec\u5e93\u5b58\uff0c\u5e9f\u7269\uff0c\u5730\u57fa\u548c\u5854\u56fe\u6869\u7684\u5e03\u5c40\uff0c\u5e76\u5728 Tableau \u4e2d\u900f\u9732\u4e86\u9876\u7ea7\u5361\u7247\u7247\u3002 \u8ba9\u6211\u4eec\u7ee7\u7eed\u8fdb\u5165\u6211\u4eec\u7684\u5f85\u529e\u4e8b\u9879\u5217\u8868\u4e0a\u7684\u4e0b\u4e00\u4e2a\u9879\u76ee\uff0c\u5373\u5355\u4eba\u89c4\u5219\u3002"),(0,r.kt)("h2",{id:"solitaire-\u89c4\u5219"},"solitaire \u89c4\u5219"),(0,r.kt)("p",null,"\u5982\u679c\u60a8\u8fd0\u884c\u5f53\u524d\u7248\u672c\u7684 Solitaire\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u60a8\u53ef\u4ee5\u7528\u5361\u7247\u7247\u505a\u4e00\u4e9b\u75af\u72c2\u7684\u4e8b\u60c5:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/game_rules1.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u73b0\u5728\u662f\u65f6\u5019\u5b9e\u65bd\u4e00\u4e9b\u89c4\u5219\u4e86\u3002"),(0,r.kt)("h3",{id:"\u4e00\u822c\u89c4\u5219"},"\u4e00\u822c\u89c4\u5219"),(0,r.kt)("p",null,"\u76ee\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u79fb\u52a8\u4efb\u4f55\u5361\u7247\u7247\uff0c\u4f46\u53ea\u80fd\u79fb\u52a8\u9762\u5bf9\u9762\u7684\u5361\u7247\u3002 \u8ba9\u6211\u4eec\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"start_drag"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"drag"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"drop"),"\u5361\u7247\u7684\u65b9\u6cd5\u4e2d\u6dfb\u52a0\u6b64\u68c0\u67e5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def start_drag(self, e: ft.DragStartEvent):\n    if self.face_up:\n        self.move_on_top()\n        self.update()\n\ndef drag(self, e: ft.DragUpdateEvent):\n    if self.face_up:\n        draggable_pile = self.get_draggable_pile()\n        for card in draggable_pile:\n            card.top = max(0, self.top + e.delta_y) + draggable_pile.index(card) * CARD_OFFSET\n            card.left = max(0, self.left + e.delta_x)\n            card.update()\n\ndef drop(self, e: ft.DragEndEvent):\n    if self.face_up:\n        for slot in self.solitaire.tableau:\n            if (\n                abs(self.top - (slot.top + len(slot.pile) * CARD_OFFSET)) < DROP_PROXIMITY\n            and abs(self.left - slot.left) < DROP_PROXIMITY\n        ):\n                self.place(slot)\n                self.update()\n                return\n\n        for slot in self.solitaire.foundations:\n            if (\n                    abs(self.top - slot.top) < DROP_PROXIMITY\n            and abs(self.left - slot.left) < DROP_PROXIMITY\n        ):\n                self.place(slot)\n                self.update()\n                return\n\n    self.bounce_back()\n    self.update()\n")),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6307\u5b9a\u5361\u7247\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"click"),"\u65b9\u6cd5",(0,r.kt)("inlineCode",{parentName:"p"},"on_tap"),"\u4e8b\u4ef6\uff0c\u5982\u679c\u60a8\u5355\u51fb Tableau Pile \u4e2d\u7684\u8138\u90e8\u5012\u5165\u9876\u90e8\u5361\u7247\uff0c\u5219\u53ef\u4ee5\u663e\u793a\u8be5\u5361\u7247:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def click(self, e):\n    if self.slot in self.solitaire.tableau:\n        if not self.face_up and self == self.slot.get_top_card():\n            self.turn_face_up()\n            self.update()\n")),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/game_rules2.gif",className:"screenshot-50"}),(0,r.kt)("h3",{id:"\u57fa\u7840\u89c4\u5219"},"\u57fa\u7840\u89c4\u5219"),(0,r.kt)("p",null,"\u76ee\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6247\u5f62\u7684\u5806\u653e\u5728\u57fa\u7840\u4e0a\uff0c\u4e0d\u5141\u8bb8\u8fd9\u6837\u505a\u3002 \u8ba9\u6211\u4eec\u68c0\u67e5\u53ef\u62d6\u52a8\u7684\u6869\u957f\u4ee5\u4fee\u590d\u5b83:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def drop(self, e: ft.DragEndEvent):\n    for slot in self.solitaire.tableau:\n        if (\n            abs(self.top - (slot.top + len(slot.pile) * CARD_OFFSET)) < DROP_PROXIMITY\n        and abs(self.left - slot.left) < DROP_PROXIMITY\n        ):\n            self.place(slot)\n            self.update()\n            return\n\n    if len(self.get_draggable_pile()) == 1:\n        for slot in self.solitaire.foundations:\n            if (\n                abs(self.top - slot.top) < DROP_PROXIMITY\n        and abs(self.left - slot.left) < DROP_PROXIMITY\n        ):\n                self.place(slot)\n                self.update()\n                return\n\n    self.bounce_back()\n    self.update()\n")),(0,r.kt)("p",null,"\u7136\u540e\uff0c\u5f53\u7136\uff0c\u6ca1\u6709\u4efb\u4f55\u5361\u7247\u90fd\u53ef\u4ee5\u653e\u5728\u57fa\u7840\u4e0a\u3002 \u6839\u636e\u89c4\u5219\uff0c\u57fa\u91d1\u4f1a\u5e94\u4ece ACE \u5f00\u59cb\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u540c\u4e00\u5957\u623f\u7684\u5361\u7247\u653e\u5728\u5176\u9876\u90e8\uff0c\u4ee5\u5efa\u7acb\u5411 King \u5efa\u7acb Ace Ace\u3002"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u5c06\u6b64\u89c4\u5219\u6dfb\u52a0\u5230\u7eb8\u724c\u8bfe\u4e0a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def check_foundations_rules(self, card, slot):\n    top_card = slot.get_top_card()\n    if top_card is not None:\n        return (\n            card.suite.name == top_card.suite.name\n            and card.rank.value - top_card.rank.value == 1\n        )\n    else:\n        return card.rank.name == "Ace"\n')),(0,r.kt)("p",null,"\u5728\u5c06\u5361\u7247\u653e\u7f6e\u5230\u57fa\u7840\u63d2\u69fd\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"drop()"),"\u65b9\u6cd5\u4e2d\u68c0\u67e5\u6b64\u89c4\u5219:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def drop(self, e: ft.DragEndEvent):\n    if self.face_up:\n        for slot in self.solitaire.tableau:\n            if (\n                abs(self.top - (slot.top + len(slot.pile) * CARD_OFFSET)) < DROP_PROXIMITY\n            and abs(self.left - slot.left) < DROP_PROXIMITY\n        ):\n                self.place(slot)\n                self.update()\n                return\n\n        if len(self.get_draggable_pile()) == 1:\n            for slot in self.solitaire.foundations:\n                if (\n                    abs(self.top - slot.top) < DROP_PROXIMITY\n            and abs(self.left - slot.left) < DROP_PROXIMITY\n        ) and self.solitaire.check_foundations_rules(self, slot):\n                    self.place(slot)\n                    self.update()\n                    return\n\n        self.bounce_back()\n        self.update()\n")),(0,r.kt)("p",null,"\u4f5c\u4e3a\u57fa\u7840\u89c4\u5219\u7684\u6700\u7ec8\u89e6\u6478\uff0c\u8ba9\u6211\u4eec\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"doublclick"),"\u7684\u65b9\u6cd5",(0,r.kt)("inlineCode",{parentName:"p"},"on_double_tap"),"\u5361\u7247\u7684\u4e8b\u4ef6\u3002 \u5b83\u5c06\u68c0\u67e5\u9762\u5bf9\u7684\u5361\u7247\u662f\u5426\u9002\u5408\u4efb\u4f55\u57fa\u7840\u5e76\u5c06\u5176\u653e\u5728\u90a3\u91cc:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"   def doubleclick(self, e):\n       if self.face_up:\n           self.move_on_top()\n           for slot in self.solitaire.foundations:\n               if self.solitaire.check_foundations_rules(self, slot):\n                   self.place(slot)\n                   self.page.update()\n                   return\n")),(0,r.kt)("h3",{id:"tableau-\u89c4\u5219"},"tableau \u89c4\u5219"),(0,r.kt)("p",null,"\u6700\u540e\uff0c\u8ba9\u6211\u4eec\u5b9e\u65bd\u89c4\u5219\u4ee5\u5efa\u7acb Tableau \u901a\u8fc7\u4ea4\u66ff\u7684\u5957\u4ef6\u989c\u8272\u4ece\u56fd\u738b\u5230\u738b\u724c\u5806\u79ef\u3002 \u6b64\u5916\uff0c\u53ea\u80fd\u5c06\u56fd\u738b\u653e\u5728\u4e00\u4e2a\u7a7a\u7684\u56fe\u8868\u4e0a\u3002\n\u8ba9\u6211\u4eec\u6dfb\u52a0\u8fd9\u4e9b\u9488\u5bf9\u7eb8\u724c\u8bfe\u7684\u89c4\u5219:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def check_tableau_rules(self, card, slot):\n    top_card = slot.get_top_card()\n    if top_card is not None:\n        return (\n            card.suite.color != top_card.suite.color\n            and top_card.rank.value - card.rank.value == 1\n            and top_card.face_up\n        )\n    else:\n        return card.rank.name == "King"\n')),(0,r.kt)("p",null,"\u4e0e\u57fa\u91d1\u4f1a\u89c4\u5219\u7c7b\u4f3c\uff0c\u6211\u4eec\u5c06\u5728\u5c06\u5361\u7247\u653e\u7f6e\u5230 Tableau \u5806\u4e4b\u524d\u68c0\u67e5 Tableau \u89c4\u5219:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def drop(self, e: ft.DragEndEvent):\n    if self.face_up:\n        for slot in self.solitaire.tableau:\n            if (\n                abs(self.top - (slot.top + len(slot.pile) * CARD_OFFSET)) < DROP_PROXIMITY\n            and abs(self.left - slot.left) < DROP_PROXIMITY\n        ) and self.solitaire.check_tableau_rules(self, slot):\n                self.place(slot)\n                self.update()\n                return\n\n        if len(self.get_draggable_pile()) == 1:\n            for slot in self.solitaire.foundations:\n                if (\n                    abs(self.top - slot.top) < DROP_PROXIMITY\n            and abs(self.left - slot.left) < DROP_PROXIMITY\n        ) and self.solitaire.check_foundations_rules(self, slot):\n                    self.place(slot)\n                    self.update()\n                    return\n\n        self.bounce_back()\n        self.update()\n")),(0,r.kt)("h3",{id:"\u5e93\u5b58\u548c\u5e9f\u7269"},"\u5e93\u5b58\u548c\u5e9f\u7269"),(0,r.kt)("p",null,"\u4e3a\u4e86\u6b63\u786e\u5730\u73a9\u7eb8\u724c\u6e38\u620f\uff0c\u6211\u4eec\u7f3a\u5c11\u5e93\u5b58\u4e2d\u5806\u79ef\u7684\u5269\u4f59\u5361\u7247\u7247\u3002"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u66f4\u65b0\u5361\u7247\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"click()"),"\u65b9\u6cd5\uff0c\u4ee5\u901a\u8fc7\u5e93\u5b58\u5806\uff0c\u5c06\u5361\u7247\u7247\u653e\u5728\u6211\u4eec\u7684\u51fa\u53d1\u65f6\u6d6a\u8d39:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def click(self, e):\n    if self.slot in self.solitaire.tableau:\n        if not self.face_up and self == self.slot.get_top_card():\n            self.turn_face_up()\n            self.update()\n    elif self.slot == self.solitaire.stock:\n        self.move_on_top()\n        self.place(self.solitaire.waste)\n        self.turn_face_up()\n        self.solitaire.update()\n")),(0,r.kt)("p",null,"\u5c31\u662f\u8fd9\u6837\uff01 \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u6b63\u786e\u5730\u73a9\u7eb8\u724c\uff0c\u4f46\u662f\u5982\u679c\u60a8\u4e0d\u80fd\u518d\u6b21\u901a\u8fc7\u6d6a\u8d39\uff0c\u5f88\u96be\u8d62\u5f97\u6bd4\u8d5b\u3002 \u8ba9\u6211\u4eec\u5b9e\u73b0",(0,r.kt)("inlineCode",{parentName:"p"},"click()")," ",(0,r.kt)("inlineCode",{parentName:"p"},"on_click"),"\u5e93\u5b58\u63d2\u69fd\u7684\u4e8b\u4ef6\uff0c\u4ee5\u4fbf\u518d\u6b21\u8003\u8651\u5e93\u5b58\u5806:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Slot(ft.Container):\n   def __init__(self, solitaire, top, left, border):\n       super().__init__()\n       self.pile=[]\n       self.width=SLOT_WIDTH\n       self.height=SLOT_HEIGHT\n       self.left=left\n       self.top=top\n       self.on_click=self.click\n       self.solitaire=solitaire\n       self.border=border\n       self.border_radius = ft.border_radius.all(6)\n\n   def click(self, e):\n       if self == self.solitaire.stock:\n           self.solitaire.restart_stock()\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"restart_stock()")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Solitaire"),"\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5c06\u518d\u6b21\u5c06\u6240\u6709\u5361\u7247\u7247\u653e\u7f6e\u5728\u5e9f\u7269\u4e2d:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def restart_stock(self):\n    while len(self.waste.pile) > 0:\n        card = self.waste.get_top_card()\n        card.turn_face_down()\n        card.move_on_top()\n        card.place(self.stock)\n    self.update\n")),(0,r.kt)("p",null,"\u5bf9\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"card.place()"),"\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4e0e\u5e93\u5b58\u548c\u5e9f\u7269\u7684\u5361\u7247\u6b63\u786e\u914d\u5408\u4f7f\u7528\uff0c\u6211\u4eec\u5c06\u6761\u4ef6\u6dfb\u52a0\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"card.get_draggable_pile()"),"\uff0c\u4ee5\u4fbf\u5b83\u4ec5\u8fd4\u56de\u9876\u90e8\u5361\u7247\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u5806:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def get_draggable_pile(self):\n    """returns list of cards that will be dragged together, starting with the current card"""\n    if self.slot is not None and self.slot != self.solitaire.stock and self.slot != self.solitaire.waste:\n        return self.slot.pile[self.slot.pile.index(self):]\n    return [self]\n')),(0,r.kt)("p",null,"\u5168\u505a\u5b8c\u4e86\uff01 \u53ef\u4ee5\u627e\u5230\u6b64\u6b65\u9aa4\u7684\u5b8c\u6574\u6e90\u4ee3\u7801",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/tree/main/python/tutorials/solitaire/solitaire-game-rules"},"\u6b64\u5904"),"\u3002"),(0,r.kt)("p",null,"\u8ba9\u6211\u4eec\u7ee7\u7eed\u8fdb\u884c\u6e38\u620f\u672c\u8eab\u7684\u6700\u540e\u4e00\u6b65 - \u68c0\u6d4b\u60a8\u8d62\u5f97\u7684\u60c5\u51b5\u3002"),(0,r.kt)("h2",{id:"\u8d62\u5f97\u6e38\u620f"},"\u8d62\u5f97\u6e38\u620f"),(0,r.kt)("p",null,"\u6839\u636e","[Wikipedia]","(",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Klondike_(solitaire)"},"https://en.wikipedia.org/wiki/Klondike_(solitaire)")," #probability_of_winning\uff09\uff0c\u6709\u4e9b\u4eba\u6697\u793a\u8d62\u5f97\u6bd4\u8d5b\u7684\u673a\u4f1a\u4e3a 30 \u573a\u6bd4\u8d5b\u4e2d\u7684 1 \u573a\u3002"),(0,r.kt)("p",null,"\u77e5\u9053\u83b7\u80dc\u7684\u673a\u4f1a\u5f88\u4f4e\uff0c\u6211\u4eec\u5e94\u8be5\u8ba1\u5212\u5411\u7528\u6237\u5411\u7528\u6237\u5c55\u793a\u4e00\u4e9b\u4ee4\u4eba\u5174\u594b\u7684\u4e8b\u60c5\u3002"),(0,r.kt)("p",null,"\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u5c06\u83b7\u80dc\u6761\u4ef6\u7684\u68c0\u67e5\u6dfb\u52a0\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"Solitaire"),"\u7c7b\u4e2d\u3002 \u5982\u679c\u6240\u6709\u56db\u4e2a\u57fa\u7840\u603b\u5171\u5305\u542b 52 \u5f20\u5361\u7247\uff0c\u90a3\u4e48\u60a8\u5c06\u8d62:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def check_win(self):\n    cards_num = 0\n    for slot in self.foundations:\n        cards_num += len(slot.pile)\n    if cards_num == 52:\n        return True\n    return False\n")),(0,r.kt)("p",null,"\u6bcf\u5f53\u5c06\u5361\u7247\u653e\u7f6e\u5728\u57fa\u7840\u4e0a\u65f6\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u8fd9\u79cd\u60c5\u51b5\u662f\u5426\u4e3a\u771f:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def place(self, slot):\n    """Place draggable pile to the slot"""\n\n    draggable_pile = self.get_draggable_pile()\n\n    for card in draggable_pile:\n        if slot in self.solitaire.tableau:\n            card.top = slot.top + len(slot.pile) * CARD_OFFSET\n        else:\n            card.top = slot.top\n        card.left = slot.left\n\n        # remove card from it\'s original slot, if exists\n        if card.slot is not None:\n            card.slot.pile.remove(card)\n\n        # change card\'s slot to a new slot\n        card.slot = slot\n\n        # add card to the new slot\'s pile\n        slot.pile.append(card)\n\n    if self.solitaire.check_win():\n        self.solitaire.winning_sequence()\n\n    self.solitaire.update()\n')),(0,r.kt)("p",null,"\u6700\u540e\uff0c\u5982\u679c\u6ee1\u8db3\u83b7\u80dc\u6761\u4ef6\uff0c\u5b83\u5c06\u89e6\u53d1\u6d89\u53ca",(0,r.kt)("a",{parentName:"p",href:"https://flet.dev/docs/guides/python/animations#position-animation"},"\u4f4d\u7f6e\u52a8\u753b"),"\u7684\u83b7\u80dc\u5e8f\u5217:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def winning_sequence(self):\n    for slot in self.foundations:\n        for card in slot.pile:\n            card.animate_position=1000\n            card.move_on_top()\n            card.top = random.randint(0, SOLITAIRE_HEIGHT)\n            card.left = random.randint(0, SOLITAIRE_WIDTH)\n            self.update()\n    self.controls.append(ft.AlertDialog(title=ft.Text("Congratulations! You won!"), open=True))\n')),(0,r.kt)("p",null,"\u60a8\u53ef\u4ee5\u60f3\u8c61\uff0c\u6211\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u624d\u8d62\u5f97\u6e38\u620f\u5e76\u62cd\u6444\u6b64\u89c6\u9891\uff0c\u4f46\u662f\u8fd9\u91cc\u662f:"),(0,r.kt)("img",{src:"/img/docs/solitaire-tutorial/winning_the_game.gif",className:"screenshot-50"}),(0,r.kt)("p",null,"\u54c7\uff01 \u6211\u4eec\u505a\u5230\u4e86\u3002 \u60a8\u53ef\u4ee5\u627e\u5230 Solitaire Game ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/tree/main/python/tutorials/solitaire/solitaire-final-part1"},"\u6b64\u5904"),"\u7684\u7b2c 1 \u90e8\u5206\u7684\u5b8c\u6574\u6e90\u4ee3\u7801\u3002"),(0,r.kt)("p",null,"\u5728\u7b2c 2 \u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u6dfb\u52a0\u5e26\u6709\u9009\u9879\u7684\u9876\u90e8\u83dc\u5355\uff0c\u4ee5\u91cd\u65b0\u542f\u52a8\u6e38\u620f\uff0c\u67e5\u770b\u6e38\u620f\u89c4\u5219\u5e76\u66f4\u6539\u6e38\u620f\u8bbe\u7f6e\uff0c\u4f8b\u5982\u5e9f\u7269\u5c3a\u5bf8\uff0c\u901a\u8fc7\u5e9f\u7269\u548c\u5361\u7247\u7247\u6620\u50cf\u7684\u901a\u884c\u6570\u3002"),(0,r.kt)("p",null,"\u73b0\u5728\uff0c\u7531\u4e8e\u6211\u4eec\u6709\u4e00\u4e2a\u4e0d\u9519\u7684\u684c\u9762\u7248\u672c\uff0c\u8ba9\u6211\u4eec\u5c06\u5176\u90e8\u7f72\u4e3a\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u4ee5\u4e0e\u60a8\u7684\u670b\u53cb\u548c\u540c\u4e8b\u5171\u4eab\u3002"),(0,r.kt)("h2",{id:"\u90e8\u7f72\u8be5\u5e94\u7528\u7a0b\u5e8f"},"\u90e8\u7f72\u8be5\u5e94\u7528\u7a0b\u5e8f"),(0,r.kt)("p",null,"\u606d\u559c\uff01 \u60a8\u5df2\u7ecf\u7528 Flet \u5728 Python \u4e2d\u521b\u5efa\u4e86 Solitaire Game \u5e94\u7528\u7a0b\u5e8f\uff0c\u770b\u8d77\u6765\u5f88\u68d2\uff01"),(0,r.kt)("p",null,"\u73b0\u5728\u662f\u65f6\u5019\u4e0e\u4e16\u754c\u5171\u4eab\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e86\uff01"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/guides/python/deploying-web-app"},"\u9075\u5faa\u4ee5\u4e0b\u8bf4\u660e"),"\u5c06\u60a8\u7684 Flet \u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u4e3a web \u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5 Fly.io \u6216 replesit\u3002"),(0,r.kt)("h2",{id:"summary"},"summary"),(0,r.kt)("p",null,"\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u60a8\u5df2\u7ecf\u5b66\u4f1a\u4e86\u5982\u4f55:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Flet app;"),(0,r.kt)("li",{parentName:"ul"},"\u7528\u624b\u52bf\u62d6\u653e\u5361\u7247\u7247\u62d6\u653e\u5361\u7247\uff1b"),(0,r.kt)("li",{parentName:"ul"},"\u521b\u5efa\u81ea\u5df1\u7684\u7c7b\uff0c\u8be5\u7c7b\u4ece Flet \u63a7\u4ef6\u7ee7\u627f\uff1b"),(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u5806\u6808\u4e2d\u63a7\u4ef6\u7684\u7edd\u5bf9\u5b9a\u4f4d\u8bbe\u8ba1 UI \u5e03\u5c40\uff1b"),(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u65bd\u9690\u5f0f\u52a8\u753b\uff1b"),(0,r.kt)("li",{parentName:"ul"},"\u5c06\u60a8\u7684 Flet \u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u5230 Web\uff1b")),(0,r.kt)("p",null,"\u4e3a\u4e86\u8fdb\u4e00\u6b65\u9605\u8bfb\uff0c\u60a8\u53ef\u4ee5\u63a2\u7d22",(0,r.kt)("a",{parentName:"p",href:"/docs/controls"},"\u63a7\u4ef6"),"\u548c",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flet-dev/examples/tree/main/python"},"\u793a\u4f8b\u5b58\u50a8\u5e93"),"\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u5f88\u4e50\u610f\u503e\u542c\u60a8\u7684\u53cd\u9988\uff01 \u8bf7\u7ed9\u6211\u4eec\u653e\u7f6e\u4e00\u4e2a",(0,r.kt)("a",{parentName:"p",href:"mailto:hello@flet.dev"},"\u7535\u5b50\u90ae\u4ef6"),"\uff0c\u52a0\u5165",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/dzWXP8SHG8"},"Discord"),"\u7684\u8ba8\u8bba\uff0c\u8bf7\u5728",(0,r.kt)("a",{parentName:"p",href:"https://twitter.com/fletdev"},"Twitter"),"\u4e0a\u5173\u6ce8\u3002"))}u.isMDXComponent=!0}}]);