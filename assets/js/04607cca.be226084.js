"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[5565],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),h=r,f=d["".concat(u,".").concat(h)]||d[h]||p[h]||l;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=h;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(7294),r=n(6010),l="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return _}});var a=n(7462),r=n(7294),l=n(6010),i=n(2466),o=n(6550),u=n(1980),s=n(7392),c=n(12);function d(e){return function(e){var t,n;return null!=(t=null==(n=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:d(n);return function(e){var t=(0,s.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function h(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,l=(0,o.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,u._X)(i),(0,r.useCallback)((function(e){if(i){var t=new URLSearchParams(l.location.search);t.set(i,e),l.replace(Object.assign({},l.location,{search:t.toString()}))}}),[i,l])]}function v(e){var t,n,a,l,i=e.defaultValue,o=e.queryString,u=void 0!==o&&o,s=e.groupId,d=p(e),v=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:i,tabValues:d})})),m=v[0],b=v[1],g=f({queryString:u,groupId:s}),k=g[0],y=g[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),n=(0,c.Nk)(t),a=n[0],l=n[1],[a,(0,r.useCallback)((function(e){t&&l.set(e)}),[t,l])]),_=w[0],N=w[1],T=function(){var e=null!=k?k:_;return h({value:e,tabValues:d})?e:null}();return(0,r.useLayoutEffect)((function(){T&&b(T)}),[T]),{selectedValue:m,selectValue:(0,r.useCallback)((function(e){if(!h({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);b(e),y(e),N(e)}),[y,N,d]),tabValues:d}}var m=n(2389),b="tabList__CuJ",g="tabItem_LNqP";function k(e){var t=e.className,n=e.block,o=e.selectedValue,u=e.selectValue,s=e.tabValues,c=[],d=(0,i.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=c.indexOf(t),a=s[n].value;a!==o&&(d(t),u(a))},h=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var a,r=c.indexOf(e.currentTarget)+1;n=null!=(a=c[r])?a:c[0];break;case"ArrowLeft":var l,i=c.indexOf(e.currentTarget)-1;n=null!=(l=c[i])?l:c[c.length-1]}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},s.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:function(e){return c.push(e)},onKeyDown:h,onClick:p},i,{className:(0,l.Z)("tabs__item",g,null==i?void 0:i.className,{"tabs__item--active":o===t})}),null!=n?n:t)})))}function y(e){var t=e.lazy,n=e.children,a=e.selectedValue,l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=l.find((function(e){return e.props.value===a}));return i?(0,r.cloneElement)(i,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function w(e){var t=v(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function _(e){var t=(0,m.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},7467:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return h}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=n(4866),o=n(5162),u=["components"],s={title:"Slider",sidebar_label:"Slider",slug:"slider"},c=void 0,d={unversionedId:"controls/slider",id:"controls/slider",title:"Slider",description:"A slider provides a visual indication of adjustable content, as well as the current setting in the total range of content.",source:"@site/docs/controls/slider.md",sourceDirName:"controls",slug:"/controls/slider",permalink:"/website/docs/controls/slider",draft:!1,editUrl:"https://github.com/flet-dev/website/edit/main/docs/controls/slider.md",tags:[],version:"current",frontMatter:{title:"Slider",sidebar_label:"Slider",slug:"slider"},sidebar:"docs",previous:{title:"Radio",permalink:"/website/docs/controls/radio"},next:{title:"Switch",permalink:"/website/docs/controls/switch"}},p={},h=[{value:"Examples",id:"examples",level:2},{value:"Basic sliders",id:"basic-sliders",level:3},{value:"Sliders with values",id:"sliders-with-values",level:3},{value:"Slider with <code>on_change</code> event",id:"slider-with-on_change-event",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>active_color</code>",id:"active_color",level:3},{value:"<code>autofocus</code>",id:"autofocus",level:3},{value:"<code>divisions</code>",id:"divisions",level:3},{value:"<code>inactive_color</code>",id:"inactive_color",level:3},{value:"<code>label</code>",id:"label",level:3},{value:"<code>max</code>",id:"max",level:3},{value:"<code>min</code>",id:"min",level:3},{value:"<code>thumb_color</code>",id:"thumb_color",level:3},{value:"<code>value</code>",id:"value",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_blur</code>",id:"on_blur",level:3},{value:"<code>on_change</code>",id:"on_change",level:3},{value:"<code>on_change_end</code>",id:"on_change_end",level:3},{value:"<code>on_change_start</code>",id:"on_change_start",level:3},{value:"<code>on_focus</code>",id:"on_focus",level:3}],f={toc:h};function v(e){var t=e.components,n=(0,r.Z)(e,u);return(0,l.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A slider provides a visual indication of adjustable content, as well as the current setting in the total range of content."),(0,l.kt)("p",null,"Use a slider when you want people to set defined values (such as volume or brightness), or when people would benefit from instant feedback on the effect of setting changes."),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://flet-controls-gallery.fly.dev/input/slider"},"Live example")),(0,l.kt)("h3",{id:"basic-sliders"},"Basic sliders"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page):\n    page.add(\n        ft.Text("Default slider:"),\n        ft.Slider(),\n        ft.Text("Default disabled slider:"),\n        ft.Slider(disabled=True))\n\nft.app(target=main)\n')))),(0,l.kt)("h3",{id:"sliders-with-values"},"Sliders with values"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page):\n    page.add(\n        ft.Text("Slider with value:"),\n        ft.Slider(value=0.3),\n        ft.Text("Slider with a custom range and label:"),\n        ft.Slider(min=0, max=100, divisions=10, label="{value}%"))\n\nft.app(target=main)\n')))),(0,l.kt)("img",{src:"/img/docs/controls/slider/slider-with-custom-content.gif",className:"screenshot-30"}),(0,l.kt)("h3",{id:"slider-with-on_change-event"},"Slider with ",(0,l.kt)("inlineCode",{parentName:"h3"},"on_change")," event"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"python",label:"Python",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import flet as ft\n\ndef main(page):\n\n    def slider_changed(e):\n        t.value = f"Slider changed to {e.control.value}"\n        page.update()\n\n    t = ft.Text()\n    page.add(\n        ft.Text("Slider with \'on_change\' event:"),\n        ft.Slider(min=0, max=100, divisions=10, label="{value}%", on_change=slider_changed), t)\n\nft.app(target=main)\n')))),(0,l.kt)("img",{src:"/img/docs/controls/slider/slider-with-change-event.gif",className:"screenshot-30"}),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"active_color"},(0,l.kt)("inlineCode",{parentName:"h3"},"active_color")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," to use for the portion of the slider track that is active."),(0,l.kt)("p",null,'The "active" side of the slider is the side between the thumb and the minimum value.'),(0,l.kt)("h3",{id:"autofocus"},(0,l.kt)("inlineCode",{parentName:"h3"},"autofocus")),(0,l.kt)("p",null,"True if the control will be selected as the initial focus. If there is more than one control on a page with autofocus set, then the first one added to the page will get focus."),(0,l.kt)("h3",{id:"divisions"},(0,l.kt)("inlineCode",{parentName:"h3"},"divisions")),(0,l.kt)("p",null,"The number of discrete divisions."),(0,l.kt)("p",null,"Typically used with ",(0,l.kt)("inlineCode",{parentName:"p"},"label")," to show the current discrete value."),(0,l.kt)("p",null,"If not set, the slider is continuous."),(0,l.kt)("h3",{id:"inactive_color"},(0,l.kt)("inlineCode",{parentName:"h3"},"inactive_color")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," for the inactive portion of the slider track."),(0,l.kt)("p",null,'The "inactive" side of the slider is the side between the thumb and the maximum value.'),(0,l.kt)("h3",{id:"label"},(0,l.kt)("inlineCode",{parentName:"h3"},"label")),(0,l.kt)("p",null,"Format with ",(0,l.kt)("inlineCode",{parentName:"p"},"{value}"),"."),(0,l.kt)("p",null,"A label to show above the slider when the slider is active. The value of ",(0,l.kt)("inlineCode",{parentName:"p"},"label")," must contain ",(0,l.kt)("inlineCode",{parentName:"p"},"{value}")," which will be replaced with a current slider value."),(0,l.kt)("p",null,"It is used to display the value of a discrete slider, and it is displayed as part of the value indicator shape."),(0,l.kt)("p",null,"If not set, then the value indicator will not be displayed."),(0,l.kt)("h3",{id:"max"},(0,l.kt)("inlineCode",{parentName:"h3"},"max")),(0,l.kt)("p",null,"The maximum value the user can select."),(0,l.kt)("p",null,"Defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"1.0"),". Must be greater than or equal to ",(0,l.kt)("inlineCode",{parentName:"p"},"min"),"."),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"max")," is equal to the ",(0,l.kt)("inlineCode",{parentName:"p"},"min"),", then the slider is disabled."),(0,l.kt)("h3",{id:"min"},(0,l.kt)("inlineCode",{parentName:"h3"},"min")),(0,l.kt)("p",null,"The minimum value the user can select."),(0,l.kt)("p",null,"Defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"0.0"),". Must be less than or equal to ",(0,l.kt)("inlineCode",{parentName:"p"},"max"),"."),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"max")," is equal to the ",(0,l.kt)("inlineCode",{parentName:"p"},"min"),", then the slider is disabled."),(0,l.kt)("h3",{id:"thumb_color"},(0,l.kt)("inlineCode",{parentName:"h3"},"thumb_color")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/python/colors"},"color")," of the thumb."),(0,l.kt)("h3",{id:"value"},(0,l.kt)("inlineCode",{parentName:"h3"},"value")),(0,l.kt)("p",null,"The currently selected value for this slider."),(0,l.kt)("p",null,"The slider's thumb is drawn at a position that corresponds to this value."),(0,l.kt)("h2",{id:"events"},"Events"),(0,l.kt)("h3",{id:"on_blur"},(0,l.kt)("inlineCode",{parentName:"h3"},"on_blur")),(0,l.kt)("p",null,"Fires when the control has lost focus."),(0,l.kt)("h3",{id:"on_change"},(0,l.kt)("inlineCode",{parentName:"h3"},"on_change")),(0,l.kt)("p",null,"Fires when the state of the Slider is changed."),(0,l.kt)("h3",{id:"on_change_end"},(0,l.kt)("inlineCode",{parentName:"h3"},"on_change_end")),(0,l.kt)("p",null,"Fires when the user is done selecting a new value for the slider."),(0,l.kt)("h3",{id:"on_change_start"},(0,l.kt)("inlineCode",{parentName:"h3"},"on_change_start")),(0,l.kt)("p",null,"Fires when the user starts selecting a new value for the slider."),(0,l.kt)("h3",{id:"on_focus"},(0,l.kt)("inlineCode",{parentName:"h3"},"on_focus")),(0,l.kt)("p",null,"Fires when the control has received focus."))}v.isMDXComponent=!0}}]);